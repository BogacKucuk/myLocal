package com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.mapper;

import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.mapper.config.GrpcMapperConfig;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.request.CreateSinglePdfRequestDto;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.response.CreateSinglePdfResponseDto;
import com.garantibbva.depositwithdrawalmngt.moneywithdrawbusiness.proto.GoldDocumentProto.CreateSinglePdfGrpcRequest;
import com.garantibbva.depositwithdrawalmngt.moneywithdrawbusiness.proto.GoldDocumentProto.CreateSinglePdfGrpcResponse;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

/**
 * Mapper for converting between gRPC messages and DTOs for Gold Document services.
 */
@Mapper(config = GrpcMapperConfig.class)
public interface GoldDocumentGrpcMapper {

    GoldDocumentGrpcMapper INSTANCE = Mappers.getMapper(GoldDocumentGrpcMapper.class);
    
    // gRPC to DTO conversions - MapStruct can handle these automatically
    CreateSinglePdfRequestDto toDto(CreateSinglePdfGrpcRequest grpcRequest);
    CreateSinglePdfResponseDto toDto(CreateSinglePdfGrpcResponse grpcResponse);
    
    // DTO to gRPC conversions - Need custom implementation due to Builder pattern
    default CreateSinglePdfGrpcRequest toGrpcRequest(CreateSinglePdfRequestDto dto) {
        if (dto == null) {
            return null;
        }
        
        return CreateSinglePdfGrpcRequest.newBuilder()
                .setDocumentType(dto.getDocumentType())
                .setDocumentStatus(dto.getDocumentStatus())
                .setAsync(dto.getAsync())
                .setUserId(dto.getUserId())
                .setAuthUserId(dto.getAuthUserId())
                .setXmlData(dto.getXmlData())
                .build();
    }
    
    default CreateSinglePdfGrpcResponse toGrpcResponse(CreateSinglePdfResponseDto dto) {
        if (dto == null) {
            return null;
        }
        
        return CreateSinglePdfGrpcResponse.newBuilder()
                .setReturnCode(dto.getReturnCode())
                .setReturnMsg(dto.getReturnMsg())
                .setDocumentId(dto.getDocumentId())
                .build();
    }
}
