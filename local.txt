@RestController
@RequestMapping("/smartControl")
public class SmartControlController {

    private ISmartControlService smartControlService;

    @Autowired
    public SmartControlController(ISmartControlService smartControlService) {
        this.smartControlService = smartControlService;
    }

    @PostMapping("/getDocuments")
    public ResponseEntity<List<CashTrxnParameterDTO>> getSmartControlDocuments(@RequestBody RequestSmartControlDocuments request) throws TrxnParameterNotFoundException {
        return new ResponseEntity<>(smartControlService.getDocumentParameters(request.getParameterName()), HttpStatus.OK);
    }
}

public interface ISmartControlService {
    List<CashTrxnParameterDTO> getDocumentParameters(String parameterName) throws TrxnParameterNotFoundException;
}

@Getter
@Setter
public class CashTrxnParameterDTO {

    private String parameterName;
    private String description;
    private String value;
    private Date   startDate;
    private Date   expireDate;
    private String dataType;

}

@Service
public class SmartControlService implements ISmartControlService {

    private final ICashTrxnParameterService parameterService;

    @Autowired
    public SmartControlService(ICashTrxnParameterService parameterService) {
        this.parameterService = parameterService;
    }

    @Override
    public List<CashTrxnParameterDTO> getDocumentParameters(String parameterName) throws TrxnParameterNotFoundException {
        List<CashTrxnParameterDTO> parameterList = parameterService.getCashTrxnInfoParametersContainingWithCache(parameterName);
        if (parameterList == null || parameterList.isEmpty()) {
            throw new TrxnParameterNotFoundException("Parametre bulunamadÄ±: " + parameterName);
        }
        return parameterList;
    }
}
