@Test
void testTakeCommissionFromAmount_ElseBranch() throws Exception {
    // 1) Komisyon var, tutardan => true
    CashTransactionDTO dto = new CashTransactionDTO();
    dto.setProcessCode(PROCESS_CODE.WITHDRAW.getProcessCode()); // ya da DEPOSIT, fark etmez

    CashTransactionDetailDTO detail = new CashTransactionDetailDTO();
    detail.setAmount(BigDecimal.valueOf(1000));
    detail.setAccountAmount(BigDecimal.valueOf(800));
    detail.setKmvAmount(BigDecimal.ZERO);           // KMV = 0 => hasKmvAmountGreaterThanZero => false
    detail.setCommissionAmount(BigDecimal.valueOf(50)); // Komisyon var
    detail.setCurrency("USD");
    detail.setAccountCurrency("EUR"); // currency != accountCurrency => else branch adayı

    CashTransactionStoredRequest req = new CashTransactionStoredRequest();
    req.setTakeCommissionFromTransactionAmount(true); // tutardan alınıyor
    req.setTakeTaxFromAccount(false);                 // tax=false => KMV branch da girmesin
    detail.setCashTransactionStoredRequest(req);

    // Tek detail
    List<CashTransactionDetailDTO> detailList = Collections.singletonList(detail);

    // Reflection'la en üst metod “calculateAmountTextAndIsKgvIncluded”  tetiklenir, oradan `takeCommissionFromAmount` => else
    Method method = CustomerNotificationService.class.getDeclaredMethod(
            "calculateAmountTextAndIsKgvIncluded",
            CashTransactionDTO.class,
            List.class
    );
    method.setAccessible(true);

    CustomerNotificationService.AmountCalculationResult result =
            (CustomerNotificationService.AmountCalculationResult)
                    method.invoke(customerNotificationService, dto, detailList);

    // Beklenti: else'e girdi => "amountText = formatCurrency(totalAmount.toString()) + ... ”
    assertNotNull(result.getAmountText());
    // KMV yok => isKgvIncluded=false
    assertFalse(result.getIsKgvIncluded());
    // "1000,00 USD karşılığı 800,00 EUR" gibi bir şey olabilir
    // Yeter ki else'e girildiğini coverage'tan görebilin
}


@Test
void testCalculateAmountTextWithoutCommission_ElseBranch() throws Exception {
    // Komisyon yok => "withoutCommission" koluna gitsin
    CashTransactionDTO dto = new CashTransactionDTO();
    dto.setProcessCode(PROCESS_CODE.DEPOSIT.getProcessCode());

    CashTransactionDetailDTO detail = new CashTransactionDetailDTO();
    detail.setAmount(BigDecimal.valueOf(500));
    detail.setAccountAmount(BigDecimal.valueOf(600));
    detail.setKmvAmount(BigDecimal.ZERO);     // => hasKmv = false
    detail.setCommissionAmount(BigDecimal.ZERO); // => no commission => "withoutCommission"
    detail.setCurrency("USD");
    detail.setAccountCurrency("EUR"); // farkli => else potansiyeli

    CashTransactionStoredRequest req = new CashTransactionStoredRequest();
    req.setTakeCommissionFromTransactionAmount(false);
    req.setTakeTaxFromAccount(false); // => hasKmvAmountGreaterThanZero => false
    detail.setCashTransactionStoredRequest(req);

    List<CashTransactionDetailDTO> detailList = Collections.singletonList(detail);

    // Reflection => en üst seviye "calculateAmountTextAndIsKgvIncluded"
    Method method = CustomerNotificationService.class.getDeclaredMethod(
            "calculateAmountTextAndIsKgvIncluded",
            CashTransactionDTO.class,
            List.class
    );
    method.setAccessible(true);

    CustomerNotificationService.AmountCalculationResult result =
            (CustomerNotificationService.AmountCalculationResult)
                    method.invoke(customerNotificationService, dto, detailList);

    // isKgvIncluded=false
    assertFalse(result.getIsKgvIncluded());
    // else => "amountText = formatCurrency(totalAmount) + currency + EQUIVALENT + ...accountAmount..."
    assertNotNull(result.getAmountText());
    // Örneğin "500,00 USD karşılığı 600,00 EUR"
    // Yeter ki coverage'ta else dalı yeşillensin
}
