// src/features/lastTransactions/lastTransactionsApi.ts
import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';
import type { Transaction, LastTransactionsResponse } from './types';

export const lastTransactionsApi = createApi({
  reducerPath: 'lastTransactionsApi',
  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:8080/api' }),
  endpoints: (builder) => ({
    getLastTransactions: builder.query<
      Transaction[],
      number
    >({
      // customerNumber’ı direkt argüman olarak alıyoruz
      query: (customerNumber) => ({
        url: '/last-transactions',
        method: 'POST',
        body: { customerNumber },
      }),
      transformResponse: (res: LastTransactionsResponse) =>
        res.transactions,
      // isteğe bağlı cache invalidation tag’leri
      providesTags: (result) =>
        result
          ? [
              ...result.map(({ customerNumber }) => ({
                type: 'LastTx' as const,
                id: customerNumber,
              })),
              { type: 'LastTx', id: 'LIST' },
            ]
          : [{ type: 'LastTx', id: 'LIST' }],
    }),
  }),
});

export const {
  useGetLastTransactionsQuery,
  useLazyGetLastTransactionsQuery,
} = lastTransactionsApi;
