public static RequestReceiptSendMail getRequestReceiptSendMailAdc() {
    RequestReceiptSendMail request = new RequestReceiptSendMail();
    request.setSubjectParameterList("Test Subject");
    request.setBranchCode("001");
    request.setCustomerName("John Doe");
    request.setCustomerTypeList("Individual");
    request.setClientno(123456);
    request.setMailType("Email");
    request.setReceiptEmailAddress("john.doe@example.com");
    request.setJobName("JobNameTest");
    
    List<AdcProcessReceiptDTO> processReceiptList = new ArrayList<>();
    AdcProcessReceiptDTO processReceipt = new AdcProcessReceiptDTO();
    processReceipt.setAccount("654321");
    processReceipt.setCurrency("USD");
    processReceiptList.add(processReceipt);
    
    request.setProcessReceiptList(processReceiptList);
    return request;
}


@Test
void whenSendEmailAdc_withAccountAndCurrency_shouldModifyAccountNoField() {
    var request = ReceiptAlternativeDistributionChannelsServiceTestUtil.getRequestReceiptSendMailAdc();

    when(receiptMailWrapperService.sendMail(Mockito.any())).thenReturn(new ResponseAdcWrapperSendMail());
    ResponseEntity<ResponseAdcWrapperSendMail> httpResponse = controller.sendEmailAdc(request);

    assertThat(httpResponse.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThat(request.getProcessReceiptList().get(0).getAccountNo()).isEqualTo("654321    USD"); // Değişiklik
}
