// utils/helper.ts
export function objectToString(value: unknown, prefix = ''): string {
  // null / undefined
  if (value === null || value === undefined) {
    return prefix ? `${prefix}: ${String(value)}` : '';
  }

  // Date
  if (value instanceof Date) {
    return `${prefix}: ${value.toISOString()}`;
  }

  // Array
  if (Array.isArray(value)) {
    return value
      .map((v, i) => objectToString(v, `${prefix}[${i}]`)) // prefix '' ise "[0]" gibi ba≈ülar
      .filter(Boolean)
      .join('\n');
  }

  // Object
  if (typeof value === 'object') {
    return Object.entries(value as Record<string, unknown>)
      .map(([k, v]) => objectToString(v, prefix ? `${prefix}.${k}` : k))
      .filter(Boolean)
      .join('\n');
  }

  // Primitive
  return `${prefix}: ${String(value)}`;
}
