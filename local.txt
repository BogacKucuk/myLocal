package com.ykb.corebanking.safedepositbox.safedepositboxbe.controller;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.request.RequestDebtPayment;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.response.ResponseDebtPaymentProvision;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.service.ISafeDepositBoxDebtPaymentService;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.BDDMockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.ImportAutoConfiguration;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.cloud.openfeign.FeignAutoConfiguration;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

import static org.mockito.ArgumentMatchers.any;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@WebMvcTest(controllers = SafeDepositBoxDebtPaymentController.class)
@ImportAutoConfiguration(exclude = FeignAutoConfiguration.class)
@ExtendWith(SpringExtension.class)
class SafeDepositBoxDebtPaymentControllerTest {

    @Autowired
    MockMvc mockMvc;

    @MockBean
    ISafeDepositBoxDebtPaymentService paymentService;

    @Test
    void testPerformDebtPaymentSuccess() throws Exception {
        // Düzenleme (Arrange)
        var request = new RequestDebtPayment();
        request.setTransactionId("TX123");

        var response = new ResponseDebtPaymentProvision();
        response.setIsSuccess(true);
        response.setInfoMessage("Payment done successfully!");

        BDDMockito.given(paymentService.performDebtPayment(any(RequestDebtPayment.class)))
                  .willReturn(response);

        // Aksiyon (Act)
        mockMvc.perform(post("/debt/performPayment")
                        .contentType(MediaType.APPLICATION_JSON)
                        .content(new ObjectMapper().writeValueAsString(request))
                )
                // Doğrulama (Assert)
                .andExpect(status().isOk())
                .andExpect(jsonPath("$.isSuccess").value(true))
                .andExpect(jsonPath("$.infoMessage").value("Payment done successfully!"));
    }
}
