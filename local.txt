@Test
void whenInquired_withAccountAndCurrency_shouldModifyAccountField() {
    var request = ReceiptAlternativeDistributionChannelsServiceTestUtil.getRequestReceiptAdcInquiry_Fully();
    request.setAccount("123456");
    request.setCurrency("USD");
    
    when(service.getReceiptList(Mockito.any())).thenReturn(ReceiptAlternativeDistributionChannelsServiceTestUtil.getResponseReceiptAdcInquiry_Successfull());
    ResponseEntity<ResponseAdcReceiptListing> httpResponse = controller.inquireReceipt(request);

    assertThat(httpResponse.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertTrue(httpResponse.getBody().getIsSuccessful());
    assertThat(request.getAccount()).isEqualTo("123456    USD"); // Değişiklik
}

@Test
void whenAdcGetDisplay_withAccountAndCurrency_shouldModifyAccountNoField() throws ReceiptException, QueryException {
    var request = ReceiptAlternativeDistributionChannelsServiceTestUtil.getRequestReceiptDisplayAdc();
    request.getRequestReceiptAdcCriteriaList().get(0).setAccount("123456");
    request.getRequestReceiptAdcCriteriaList().get(0).setCurrency("EUR");
    
    when(service.getReceiptDisplayList(Mockito.any())).thenReturn(ReceiptAlternativeDistributionChannelsServiceTestUtil.getResponseAdcReceiptDisplay());
    ResponseEntity<ResponseAdcReceiptDisplayList> httpResponse = controller.adcGetDisplay(request);

    assertThat(httpResponse.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertFalse(httpResponse.getBody().getResponseAdcReceiptDisplay().get(0).getIsSuccessful());
    assertThat(request.getRequestReceiptAdcCriteriaList().get(0).getAccountNo()).isEqualTo("123456    EUR"); // Değişiklik
}

@Test
void whenSendEmailAdc_withAccountAndCurrency_shouldModifyAccountNoField() {
    var request = ReceiptAlternativeDistributionChannelsServiceTestUtil.getRequestReceiptSendMailAdc();
    request.getProcessReceiptList().get(0).setAccount("654321");
    request.getProcessReceiptList().get(0).setCurrency("GBP");

    when(receiptMailWrapperService.sendMail(Mockito.any())).thenReturn(ReceiptAlternativeDistributionChannelsServiceTestUtil.getResponseSendMailAdc());
    ResponseEntity<ResponseAdcWrapperSendMail> httpResponse = controller.sendEmailAdc(request);

    assertThat(httpResponse.getStatusCode()).isEqualTo(HttpStatus.OK);
    assertThat(request.getProcessReceiptList().get(0).getAccountNo()).isEqualTo("654321    GBP"); // Değişiklik
}
