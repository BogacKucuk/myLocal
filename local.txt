package com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.mapper;

import com.garantibbva.depositwithdrawalmngt.moneywithdrawbusiness.proto.GoldDocumentProto.*;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.common.*;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.request.CreateDocumentDB2RequestDto;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.response.CreateDocumentDB2ResponseDto;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

@Mapper(config = GrpcMapperConfig.class)
public interface DocumentDB2GrpcMapper {
    
    DocumentDB2GrpcMapper INSTANCE = Mappers.getMapper(DocumentDB2GrpcMapper.class);
    
    // ==================== Request Mappings ====================
    
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2Request toGrpcRequest(CreateDocumentDB2RequestDto dto);
    
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2RequestDto toDto(CreateDocumentDB2Request grpcRequest);
    
    // ReferenceIdServerData mappings
    ReferenceIdServerData toGrpcReferenceIdServerData(ReferenceIdServerDataDto dto);
    ReferenceIdServerDataDto toReferenceIdServerDataDto(ReferenceIdServerData grpc);
    
    // IdCardTxn mappings
    IdCardTxn toGrpcIdCardTxn(IdCardTxnDto dto);
    IdCardTxnDto toIdCardTxnDto(IdCardTxn grpc);
    
    // GroupList mappings
    @Mapping(target = "groupListItemsList", source = "groupListItems")
    GroupList toGrpcGroupList(GroupListDto dto);
    
    @Mapping(target = "groupListItems", source = "groupListItemsList")
    GroupListDto toGroupListDto(GroupList grpc);
    
    // GroupListItem mappings
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "customerNum", source = "customerNum")
    GroupListItem toGrpcGroupListItem(GroupListItemDto dto);
    
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "customerNum", source = "customerNum")
    GroupListItemDto toGroupListItemDto(GroupListItem grpc);
    
    // IdCardTxnDetail mappings
    @Mapping(target = "documentId", source = "documentId")
    @Mapping(target = "docPersonType", source = "docPersonType")
    IdCardTxnDetail toGrpcIdCardTxnDetail(IdCardTxnDetailDto dto);
    
    @Mapping(target = "documentId", source = "documentId")
    @Mapping(target = "docPersonType", source = "docPersonType")
    IdCardTxnDetailDto toIdCardTxnDetailDto(IdCardTxnDetail grpc);
    
    // ==================== Response Mappings ====================
    
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    CreateDocumentDB2ResponseDto toResponseDto(CreateDocumentDB2Response grpcResponse);
    
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    CreateDocumentDB2Response toGrpcResponse(CreateDocumentDB2ResponseDto dto);
    
    // ErrorComponent mappings (messageTxt ignore edildi)
    @Mapping(target = "severityCode", source = "severityCode")
    @Mapping(target = "rollbackIndicator", source = "rollbackIndicator")
    @Mapping(target = "originServId", source = "originServId")
    @Mapping(target = "contextString", source = "contextString")
    @Mapping(target = "returnCode", source = "returnCode")
    @Mapping(target = "reasonCode", source = "reasonCode")
    @Mapping(target = "checksum", source = "checksum")
    ErrorComponent toGrpcErrorComponent(ErrorComponentDto dto);
    
    @Mapping(target = "severityCode", source = "severityCode")
    @Mapping(target = "rollbackIndicator", source = "rollbackIndicator")
    @Mapping(target = "originServId", source = "originServId")
    @Mapping(target = "contextString", source = "contextString")
    @Mapping(target = "returnCode", source = "returnCode")
    @Mapping(target = "reasonCode", source = "reasonCode")
    @Mapping(target = "checksum", source = "checksum")
    ErrorComponentDto toErrorComponentDto(ErrorComponent grpc);
    
    // ContextString mappings
    ContextString toGrpcContextString(ContextStringDto dto);
    ContextStringDto toContextStringDto(ContextString grpc);
}
