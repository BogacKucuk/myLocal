package com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.jobs.dummyparameterinsert;

import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.common.ItemFailureLoggerListener;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.common.stats.CommonJobExecutionListener;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.common.stats.CommonStepExecutionListener;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.config.BaseJobConfiguration;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.jobs.dummyparameterinsert.config.DummyParameterInsertConfig;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.dto.ParameterDTO;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.entity.ParameterEntity;
import com.ykb.corebanking.safedepositbox.safedepositboxbe.repository.ParameterRepository;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.StepScope;
import org.springframework.batch.core.item.Chunk;
import org.springframework.batch.core.item.ItemProcessor;
import org.springframework.batch.core.item.ItemReader;
import org.springframework.batch.core.item.ItemWriter;
import org.springframework.batch.core.job.builder.FlowBuilder;
import org.springframework.batch.core.job.flow.Flow;
import org.springframework.batch.item.support.ListItemReader;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

@Configuration
public class DummyParameterInsertJobConfiguration extends BaseJobConfiguration {

    public static final String JOB_NAME = "dummyParameterInsertJob";
    public static final String STEP_NAME = "dummyParameterInsertStep";

    @Autowired
    private DummyParameterInsertConfig dummyConfig;

    @Autowired
    private ParameterRepository parameterRepository;

    @Autowired
    private CommonJobExecutionListener commonJobExecutionListener;

    @Autowired
    private CommonStepExecutionListener commonStepExecutionListener;

    @Autowired
    private ItemFailureLoggerListener<ParameterDTO,ParameterDTO> itemFailureLoggerListener;

    @Bean(name = JOB_NAME)
    public Job dummyParameterInsertJob() {
        return getCommonJobBuilder(JOB_NAME)
                .repository(jobRepository)
                .listener(commonJobExecutionListener)
                .start(dummyParameterInsertFlow())
                .end()
                .build();
    }

    @Bean
    public Flow dummyParameterInsertFlow() {
        return new FlowBuilder<Flow>("dummyParameterInsertFlow")
                .start(dummyParameterInsertStep())
                .end();
    }

    @Bean
    public Step dummyParameterInsertStep() {
        return getCommonStepBuilder(STEP_NAME)
                .repository(jobRepository)
                .<ParameterDTO, ParameterDTO>chunk(dummyConfig.getChunkSize(), transactionManager)
                .reader(dummyParameterReader())
                .processor(dummyParameterProcessor())
                .writer(dummyParameterWriter())
                .listener(commonStepExecutionListener)
                .listener(itemFailureLoggerListener)
                .taskExecutor(defaultBatchTaskExecutor())
                .build();
    }

    @Bean
    @StepScope
    public ItemReader<ParameterDTO> dummyParameterReader() {
        List<ParameterDTO> dummyList = new ArrayList<>();
        for(int i=1; i<=5; i++){
            ParameterDTO dto = new ParameterDTO();
            dto.setName("BATCH_DUMMY_" + i);
            dto.setParameterKey("KEY_" + i);
            dto.setValue("VAL_" + i);
            dto.setDescription("Dummy record " + i);
            dto.setStatus("A");
            dto.setUserCode("batchUser");
            dto.setCreateDate(new Date());
            dto.setSourceName("DummyBatch");
            dto.setIsSingle("Y");
            dummyList.add(dto);
        }
        return new ListItemReader<>(dummyList);
    }

    @Bean
    @StepScope
    public ItemProcessor<ParameterDTO, ParameterDTO> dummyParameterProcessor() {
        return item -> {
            // Ã–rnek: item.setDescription(item.getDescription() + " processed");
            return item;
        };
    }

    @Bean
    @StepScope
    public ItemWriter<ParameterDTO> dummyParameterWriter() {
        return new ItemWriter<>() {
            @Override
            public void write(Chunk<? extends ParameterDTO> chunk) {
                List<ParameterEntity> entities = new ArrayList<>();
                for(ParameterDTO dto : chunk) {
                    ParameterEntity e = new ParameterEntity();
                    e.setName(dto.getName());
                    e.setParameterKey(dto.getParameterKey());
                    e.setValue(dto.getValue());
                    e.setDescription(dto.getDescription());
                    e.setStatus(dto.getStatus());
                    e.setUserCode(dto.getUserCode());
                    e.setCreateDate(dto.getCreateDate());
                    e.setSourceName(dto.getSourceName());
                    e.setIsSingle(dto.getIsSingle());
                    entities.add(e);
                }
                parameterRepository.saveAll(entities);
            }
        };
    }
}
