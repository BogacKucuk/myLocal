import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.junit.jupiter.api.extension.ExtendWith;
import java.util.Arrays;
import java.util.List;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(SpringExtension.class)
@SpringBootTest(classes = SmartControlService.class)
class SmartControlServiceTest {

    @MockBean
    ICashTrxnParameterService parameterService;

    @Autowired
    SmartControlService smartControlService;

    @Test
    void getDocumentParameters_ShouldReturnParameterList() throws TrxnParameterNotFoundException {
        String parameterName = "testParam";
        List<CashTrxnParameterDTO> mockList = Arrays.asList(new CashTrxnParameterDTO());
        when(parameterService.getCashTrxnInfoParametersContainingWithCache(parameterName)).thenReturn(mockList);

        List<CashTrxnParameterDTO> result = smartControlService.getDocumentParameters(parameterName);

        assertNotNull(result);
        assertEquals(1, result.size());
        verify(parameterService, times(1)).getCashTrxnInfoParametersContainingWithCache(parameterName);
    }

    @Test
    void getDocumentParameters_ShouldThrowException_WhenNoParametersFound() {
        String parameterName = "testParam";
        when(parameterService.getCashTrxnInfoParametersContainingWithCache(parameterName)).thenReturn(null);

        assertThrows(TrxnParameterNotFoundException.class, () -> {
            smartControlService.getDocumentParameters(parameterName);
        });

        verify(parameterService, times(1)).getCashTrxnInfoParametersContainingWithCache(parameterName);
    }
}
