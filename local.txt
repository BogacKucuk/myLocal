openapi: 3.0.0
info:
  title: deposit-withdrawal-channel v0
  description: Service API for deposit-withdrawal-channel v0
  version: 0.1.0
  x-generation-options:
    type: object
    api-domain: Intranet
    api-company: Garanti
    api-use-ssl: true
    api-auth: token
    api-auth-version: '3'
    smart-config-description: deposit-withdrawal-channel Channel Service API YAML
    generator-backend-servers:
      type: object
      dev-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-dev:8080
      test-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-test:8080
      qa-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-qa:8080
      prod-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-prod:8080
  contact:
    email: api.support@garanti.com.tr
    name: Garanti API Support Team
tags:
- name: deposit-withdrawal-channel
  description: deposit-withdrawal-channel
- name: ChequeCommissionInfoService
  description: Endpoints backed by gRPC service `ChequeCommissionInfoService`. Auto-synced
    from proto.
- name: DigitalOrderGrpcService
  description: Endpoints backed by gRPC service `DigitalOrderGrpcService`. Auto-synced
    from proto.
- name: GoldDocumentGrpcService
  description: Endpoints backed by gRPC service `GoldDocumentGrpcService`. Auto-synced
    from proto.
- name: OperationCodeGrpcService
  description: Endpoints backed by gRPC service `OperationCodeGrpcService`. Auto-synced
    from proto.
- name: ReceiptService
  description: Endpoints backed by gRPC service `ReceiptService`. Auto-synced from
    proto.
- name: TransactionGrpcService
  description: Endpoints backed by gRPC service `TransactionGrpcService`. Auto-synced
    from proto.
- name: TransactionCustomerGrpcService
  description: Endpoints backed by gRPC service `TransactionCustomerGrpcService`.
    Auto-synced from proto.
security:
- BearerAuth: []
servers:
- url: https://apigw-dev.apps-t.fw.garanti.com.tr:443/deposit-withdrawal-mngt/deposit-withdrawal-ch/v0
paths:
  /createTransaction:
    post:
      tags:
      - Transaction-Grpc-Service
      operationId: createTransaction
      summary: createTransaction
      description: createTransaction
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionGrpcRequest'
            example:
              operationType: DEPOSIT
              customerNumber: 12345678
              customerAccount: TR123456789012345678901234
              transactionAmount: 1000.5
              currency: TRY
              channel: BRANCH
              request:
              - PARAM1
              - PARAM2
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithTransactionGrpcResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /listCustomerRelationshipTypes:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: listCustomerRelationshipTypes
      summary: listCustomerRelationshipTypes
      description: listCustomerRelationshipTypes
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRelationshipTypeRequest'
            example:
              headerInfo:
                command: LIST
                sourceProgramId: WEBAPI
                unitNum: '001'
                channelCode: INTERNET
                moduleCode: CUSTOMER
                submoduleCode: RELATION
              serverData:
                userId: USER123
                referenceId: REF123456789
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithCustomerRelationshipTypeResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /listRepresentativePersons:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: listRepresentativePersons
      summary: listRepresentativePersons
      description: listRepresentativePersons
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentativePersonRequest'
            example:
              customerNum: '123456'
              customerNum2: '654321'
              relationTypeText: GUARDIAN
              acceptableLatency: '5'
              shareRate: '100'
              shareAmount: '1000'
              confirmationDate: '2023-01-01'
              headerInfo:
                command: LIST
                sourceProgramId: WEBAPI
                unitNum: '001'
                channelCode: INTERNET
                moduleCode: CUSTOMER
                submoduleCode: RELATION
              serverData:
                userId: USER123
                referenceId: REF123456789
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithRepresentativePersonResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /getOperationCode:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: getOperationCode
      summary: getOperationCode
      description: getOperationCode
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCodeGrpcRequest'
            example:
              operatorCustomer:
              - operatorCustomerNum: '12345678'
              accountCustomerNum: '87654321'
              accountBranch: '002'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithOperationCodeGrpcResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  headers:
    Access-Control-Allow-Origin:
      description: '*.garantibbva.com.tr'
      schema:
        type: string
    GUID:
      description: Header GUID
      schema:
        $ref: '#/components/parameters/GuidHeader'
  schemas:
    TransactionGrpcRequest:
      type: object
      description: Request model for transaction operations
      example:
        operationType: DEPOSIT
        customerNumber: 12345678
        customerAccount: TR123456789012345678901234
        transactionAmount: 1000.5
        currency: TRY
        channel: BRANCH
        request:
        - PARAM1
        - PARAM2
      properties:
        operationType:
          type: string
          description: Type of operation to be performed
          example: DEPOSIT
        customerNumber:
          type: integer
          format: int32
          description: Customer identification number
          example: 12345678
        customerAccount:
          type: string
          description: Customer account number
          example: TR123456789012345678901234
        transactionAmount:
          type: number
          format: bigdecimal
          description: Amount to be processed in the transaction
          example: 1000.5
        currency:
          type: string
          description: Currency code for the transaction
          example: TRY
        channel:
          type: string
          description: Channel through which the transaction is initiated
          example: BRANCH
        request:
          type: array
          description: Additional parameters for the request
          items:
            type: string
            example: PARAM1
            description: Items of `request`.
          example:
          - string
    TransactionGrpcResponse:
      type: object
      description: Response model for transaction operations
      example:
        message: Transaction completed successfully
      properties:
        message:
          type: string
          description: Response message indicating transaction status
          example: Transaction completed successfully
    CustomerRelationshipTypeRequest:
      type: object
      description: Request model for customer relationship type operations
      example:
        headerInfo:
          command: LIST
          sourceProgramId: WEBAPI
          unitNum: '001'
          channelCode: INTERNET
          moduleCode: CUSTOMER
          submoduleCode: RELATION
        serverData:
          userId: USER123
          referenceId: REF123456789
      properties:
        headerInfo:
          allOf:
          - $ref: '#/components/schemas/HeaderInfo'
          description: Field `headerInfo`.
        serverData:
          allOf:
          - $ref: '#/components/schemas/ServerData'
          description: Field `serverData`.
    CustomerRelationshipTypeResponse:
      type: object
      description: Response model for customer relationship type operations
      example:
        customerRelationshipTypes:
        - description: GUARDIAN
        - description: PROXY
      properties:
        customerRelationshipTypes:
          type: array
          description: List of available customer relationship types
          items:
            allOf:
            - $ref: '#/components/schemas/CustomerRelationshipType'
            description: Items of `customerRelationshipTypes`.
          example: []
    CustomerRelationshipType:
      type: object
      description: Model representing a customer relationship type
      example:
        description: GUARDIAN
      properties:
        description:
          type: string
          description: Description of the customer relationship type
          example: GUARDIAN
    RepresentativePersonRequest:
      type: object
      description: Request model for representative person operations
      example:
        customerNum: '123456'
        customerNum2: '654321'
        relationTypeText: GUARDIAN
        acceptableLatency: '5'
        shareRate: '100'
        shareAmount: '1000'
        confirmationDate: '2023-01-01'
        headerInfo:
          command: LIST
          sourceProgramId: WEBAPI
          unitNum: '001'
          channelCode: INTERNET
          moduleCode: CUSTOMER
          submoduleCode: RELATION
        serverData:
          userId: USER123
          referenceId: REF123456789
      properties:
        customerNum:
          type: string
          description: Primary customer number
          example: '123456'
        customerNum2:
          type: string
          description: Secondary customer number
          example: '654321'
        relationTypeText:
          type: string
          description: Type of relationship between customers
          example: GUARDIAN
        acceptableLatency:
          type: string
          description: Acceptable latency in seconds
          example: '5'
        shareRate:
          type: string
          description: Rate of sharing between entities
          example: '100'
        shareAmount:
          type: string
          description: Amount to be shared
          example: '1000'
        confirmationDate:
          type: string
          description: Date of confirmation
          example: '2023-01-01'
        headerInfo:
          allOf:
          - $ref: '#/components/schemas/HeaderInfo'
          description: Field `headerInfo`.
        serverData:
          allOf:
          - $ref: '#/components/schemas/ServerData'
          description: Field `serverData`.
    RepresentativePersonResponse:
      type: object
      description: Response model for representative person operations
      example:
        representativePerson:
        - name: John
          surname: Doe
      properties:
        representativePerson:
          type: array
          description: List of representative persons
          items:
            allOf:
            - $ref: '#/components/schemas/RepresentativePerson'
            description: Items of `representativePerson`.
          example: []
    RepresentativePerson:
      type: object
      description: Model representing a representative person
      example:
        name: John
        surname: Doe
      properties:
        name:
          type: string
          description: First name of the representative person
          example: John
        surname:
          type: string
          description: Last name of the representative person
          example: Doe
    OperationCodeGrpcRequest:
      type: object
      description: Request model for operation code service
      example:
        operatorCustomer:
        - operatorCustomerNum: '12345678'
        accountCustomerNum: '87654321'
        accountBranch: '002'
      properties:
        operatorCustomer:
          type: array
          description: List of operator customers
          items:
            allOf:
            - $ref: '#/components/schemas/Customer'
            description: Items of `operatorCustomer`.
          example: []
        accountCustomerNum:
          type: string
          description: Account customer number
          example: '87654321'
        accountBranch:
          type: string
          description: Account branch code
          example: '002'
    Customer:
      type: object
      description: Customer information model
      example:
        operatorCustomerNum: '12345678'
      properties:
        operatorCustomerNum:
          type: string
          description: Operator customer number
          example: '12345678'
    OperationCodeGrpcResponse:
      type: object
      description: Response model for operation code service
      example:
        opCode1: CODE1
        opCode2: CODE2
      properties:
        opCode1:
          type: string
          description: First operation code
          example: CODE1
        opCode2:
          type: string
          description: Second operation code
          example: CODE2
    HeaderInfo:
      type: object
      description: Common header information structure for requests
      example:
        command: LIST
        sourceProgramId: WEBAPI
        unitNum: '001'
        channelCode: INTERNET
        moduleCode: CUSTOMER
        submoduleCode: RELATION
      properties:
        command:
          type: string
          description: Command to be executed
          example: LIST
        sourceProgramId:
          type: string
          description: Source program identifier
          example: WEBAPI
        unitNum:
          type: string
          description: Unit number
          example: '001'
        channelCode:
          type: string
          description: Channel code for the request
          example: INTERNET
        moduleCode:
          type: string
          description: Module code for the request
          example: CUSTOMER
        submoduleCode:
          type: string
          description: Submodule code for the request
          example: RELATION
    ServerData:
      type: object
      description: Common server data structure for requests
      example:
        userId: USER123
        referenceId: REF123456789
      properties:
        userId:
          type: string
          description: User identifier
          example: USER123
        referenceId:
          type: string
          description: Reference identifier for tracking
          example: REF123456789
    BigDecimal:
      type: object
      description: Decimal type from proto (scale/precision/value).
      properties:
        scale:
          type: integer
          format: int32
          minimum: 0
          description: Number of fractional digits.
          example: 2
        precision:
          type: integer
          format: int32
          minimum: 0
          description: Total number of significant digits.
          example: 10
        value:
          type: string
          format: byte
          description: Big-endian binary integer content, base64-encoded.
          example: AAECAw==
      additionalProperties: false
  responses:
    HttpOKwithTransactionGrpcResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionGrpcResponse'
    HttpOKwithCustomerRelationshipTypeResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerRelationshipTypeResponse'
    HttpOKwithRepresentativePersonResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepresentativePersonResponse'
    HttpOKwithOperationCodeGrpcResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationCodeGrpcResponse'
    BadRequest:
      description: Bad request.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    Forbiden:
      description: Forbidden
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    MethodNotAllowed:
      description: Method not allowed.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    ServerError:
      description: Internal Server error.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    Unauthorized:
      description: Unauthorized.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
  parameters:
    AuthorizationTokenHeader:
      name: Authorization
      in: header
      description: Oauth Access token information
      example: Bearer 4c4f8643-29e1-4b7f-b62c-03ea78dad48e
      required: false
      schema:
        type: string
    ContentTypeHeader:
      name: Content-Type
      in: header
      description: application/json , application/xml
      example: application/json
      required: true
      schema:
        type: string
    AcceptHeader:
      name: Accept
      in: header
      description: application/json , application/xml
      example: application/json
      required: true
      schema:
        type: string
    ChannelHeader:
      name: channel
      in: header
      description: Information on which channel the request comes
      example: ATM
      required: true
      schema:
        type: string
    IpHeader:
      name: ip
      in: header
      description: End User Client IP
      example: 127.0.0.1
      required: true
      schema:
        type: string
    DialectHeader:
      name: dialect
      in: header
      description: TR (Turkish) , EN (English) , RO (Romanca)
      example: TR
      required: true
      schema:
        maxLength: 2
        type: string
    TenantCompanyHeader:
      name: tenant-company-id
      in: header
      description: The id of the company from where the request is originated from
        (GAR, GFC, GES)
      example: GAR
      required: true
      schema:
        maxLength: 3
        type: string
    TenantGeolocationHeader:
      name: tenant-geolocation
      description: Location of where the request originated from.
      example: TUR
      in: header
      required: false
      schema:
        maxLength: 3
        type: string
    TenantAppIdHeader:
      name: tenant-app-id
      description: Application or Service identdification number
      example: 7e6584354f5e6624518686f6eb124265
      in: header
      required: false
      schema:
        type: string
    ApiKeyHeader:
      name: api-key
      description: It is needed for Customer and Third-Party Services
      example: l7xx766d3fc85ca74b4bbe582e529e62747a
      in: header
      required: false
      schema:
        type: string
    GuidHeader:
      name: guid
      in: header
      description: It is used to process trace. The GUID  must be a unique value for
        each request
      example: '123456789012345678901234567'
      required: true
      schema:
        type: string
    UserIdHeader:
      name: user-id
      description: 'User Id '
      example: ME07684
      in: header
      required: false
      schema:
        type: string
    ClientIdHeader:
      name: client-id
      description: The client Id is defined by access manager for getting authorization
        code and access token
      example: QqWCRHVzntITMgBoa61f
      in: header
      required: false
      schema:
        type: string
    RequestTraceFlagHeader:
      name: request-trace-flag
      description: 'true: log the request-response paylod in backend application.false:
        DO NOT log the request-response paylod in backend application.'
      example: 'true'
      in: header
      required: false
      schema:
        type: string
    ClientTraceIdlHeader:
      name: x-client-trace-id
      description: It is used to process trace. It must be a unique value for each
        request
      example: a03debf792229fdbc6bc8a6e9b9df464
      in: header
      required: true
      schema:
        type: string
    ForwardedForHeader:
      name: x-forwareded-for
      description: It is used to inform the originated IP address of a client
      example: 203.0.113.195
      in: header
      required: true
      schema:
        type: string
