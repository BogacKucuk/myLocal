package com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.response;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class CreateDocumentDB2ResponseDto {
    
    private String instanceId;
    private ErrorComponentDto errorComponent;
}


package com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.common;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ErrorComponentDto {
    
    private String severityCode;
    private String rollbackIndicator;
    private String originServId;
    private ContextStringDto contextString;
    private String messageTxt;
    private Integer returnCode;
    private Integer reasonCode;
    private String checksum;
}




package com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.mapper;

import com.garantibbva.depositwithdrawalmngt.moneywithdrawbusiness.proto.*;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.common.*;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.request.CreateDocumentDB2RequestDto;
import com.garantibbva.depositwithdrawalmngt.depositwithdrawalchannel.service.model.response.CreateDocumentDB2ResponseDto;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

@Mapper(config = GrpcMapperConfig.class)
public interface DocumentDB2GrpcMapper {
    
    DocumentDB2GrpcMapper INSTANCE = Mappers.getMapper(DocumentDB2GrpcMapper.class);
    
    // ==================== Request Mappings ====================
    
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2Request toGrpcRequest(CreateDocumentDB2RequestDto dto);
    
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2RequestDto toDto(CreateDocumentDB2Request grpcRequest);
    
    // ReferenceIdServerData mappings
    ReferenceIdServerData toGrpcReferenceIdServerData(ReferenceIdServerDataDto dto);
    ReferenceIdServerDataDto toReferenceIdServerDataDto(ReferenceIdServerData grpc);
    
    // IdCardTxn mappings
    IdCardTxn toGrpcIdCardTxn(IdCardTxnDto dto);
    IdCardTxnDto toIdCardTxnDto(IdCardTxn grpc);
    
    // GroupList mappings
    GroupList toGrpcGroupList(GroupListDto dto);
    GroupListDto toGroupListDto(GroupList grpc);
    
    // GroupListItem mappings
    GroupListItem toGrpcGroupListItem(GroupListItemDto dto);
    GroupListItemDto toGroupListItemDto(GroupListItem grpc);
    
    // IdCardTxnDetail mappings
    IdCardTxnDetail toGrpcIdCardTxnDetail(IdCardTxnDetailDto dto);
    IdCardTxnDetailDto toIdCardTxnDetailDto(IdCardTxnDetail grpc);
    
    // ==================== Response Mappings ====================
    
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    CreateDocumentDB2ResponseDto toResponseDto(CreateDocumentDB2Response grpcResponse);
    
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    CreateDocumentDB2Response toGrpcResponse(CreateDocumentDB2ResponseDto dto);
    
    // ErrorComponent mappings
    ErrorComponent toGrpcErrorComponent(ErrorComponentDto dto);
    ErrorComponentDto toErrorComponentDto(ErrorComponent grpc);
    
    // ContextString mappings
    ContextString toGrpcContextString(ContextStringDto dto);
    ContextStringDto toContextStringDto(ContextString grpc);
}
