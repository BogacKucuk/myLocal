@Test
void adcGetDisplay_withNullAccountNumberOrCurrency_shouldNotSetAccountField() throws ReceiptException {
    // Arrange
    RequestAdcReceiptDisplay requestAdc = new RequestAdcReceiptDisplay();
    RequestReceiptAdcCriteria criteria = new RequestReceiptAdcCriteria();
    criteria.setAccountNumber(null);
    criteria.setAccountCurrency("EUR"); // accountNumber null -> if'e girmez
    requestAdc.setRequestReceiptAdcCriteriaList(Collections.singletonList(criteria));

    // parseKwcaac invalid test. 
    // Service metodu gerçekte List<ResponseAdcReceiptDisplay> döndürüyor.
    ResponseAdcReceiptDisplay dto = ResponseAdcReceiptDisplay.builder()
            .account("invalid format") // parseKwcaac -> Optional.empty()
            .build();
    List<ResponseAdcReceiptDisplay> mockDisplayList = Collections.singletonList(dto);

    // when(...) ile list döndürecek şekilde mocklayın:
    when(service.getReceiptDisplayList(Mockito.any())).thenReturn(mockDisplayList);

    // Act
    ResponseEntity<ResponseAdcReceiptDisplayList> result = controller.adcGetDisplay(requestAdc);

    // Assert
    assertEquals(HttpStatus.OK, result.getStatusCode());
    // if'e girmediği için account set edilmemeli
    assertNull(criteria.getAccount());

    // parseKwcaac -> empty döneceği için dto'ya accountNumber / accountCurrency set edilmemeli
    assertNull(dto.getAccountNumber());
    assertNull(dto.getAccountCurrency());
}
