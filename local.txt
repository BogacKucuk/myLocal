openapi: 3.0.0
info:
  title: deposit-withdrawal-channel v0
  description: Service API for deposit-withdrawal-channel v0
  version: 0.1.0
  x-generation-options:
    type: object
    api-domain: Intranet
    api-company: Garanti
    api-use-ssl: true
    api-auth: token
    api-auth-version: '3'
    smart-config-description: deposit-withdrawal-channel Channel Service API YAML
    generator-backend-servers:
      type: object
      dev-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-dev:8080
      test-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-test:8080
      qa-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-qa:8080
      prod-server: http://deposit-withdrawal-ch-v0.deposit-withdrawal-mngt-prod:8080
  contact:
    email: api.support@garanti.com.tr
    name: Garanti API Support Team
tags:
- name: deposit-withdrawal-channel
  description: deposit-withdrawal-channel
security:
- BearerAuth: []
servers:
- url: https://apigw-dev.apps-t.fw.garanti.com.tr:443/deposit-withdrawal-mngt/deposit-withdrawal-ch/v0
paths:
  /createTransaction:
    post:
      tags:
      - Transaction-Grpc-Service
      operationId: createTransaction
      summary: createTransaction
      description: createTransaction
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionGrpcRequest'
            example: {operationType: DEPOSIT, customerNumber: 12345678, customerAccount: TR123456789012345678901234,
              transactionAmount: 1000.5, currency: TRY, channel: BRANCH, request: [
                PARAM1, PARAM2]}
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithTransactionGrpcResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /listCustomerRelationshipTypes:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: listCustomerRelationshipTypes
      summary: listCustomerRelationshipTypes
      description: listCustomerRelationshipTypes
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRelationshipTypeRequest'
            example: {headerInfo: {command: LIST, sourceProgramId: WEBAPI, unitNum: '001',
                channelCode: INTERNET, moduleCode: CUSTOMER, submoduleCode: RELATION},
              serverData: {userId: USER123, referenceId: REF123456789}}
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithCustomerRelationshipTypeResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /listRepresentativePersons:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: listRepresentativePersons
      summary: listRepresentativePersons
      description: listRepresentativePersons
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentativePersonRequest'
            example: {customerNum: '123456', customerNum2: '654321', relationTypeText: GUARDIAN,
              acceptableLatency: '5', shareRate: '100', shareAmount: '1000', confirmationDate: '2023-01-01',
              headerInfo: {command: LIST, sourceProgramId: WEBAPI, unitNum: '001',
                channelCode: INTERNET, moduleCode: CUSTOMER, submoduleCode: RELATION},
              serverData: {userId: USER123, referenceId: REF123456789}}
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithRepresentativePersonResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
  /getOperationCode:
    post:
      tags:
      - Transaction-Customer-Grpc-Service
      operationId: getOperationCode
      summary: getOperationCode
      description: getOperationCode
      parameters:
      - $ref: '#/components/parameters/AcceptHeader'
      - $ref: '#/components/parameters/ContentTypeHeader'
      - $ref: '#/components/parameters/ChannelHeader'
      - $ref: '#/components/parameters/IpHeader'
      - $ref: '#/components/parameters/DialectHeader'
      - $ref: '#/components/parameters/GuidHeader'
      - $ref: '#/components/parameters/ClientTraceIdlHeader'
      - $ref: '#/components/parameters/AuthorizationTokenHeader'
      - $ref: '#/components/parameters/TenantGeolocationHeader'
      - $ref: '#/components/parameters/TenantAppIdHeader'
      - $ref: '#/components/parameters/ApiKeyHeader'
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/ClientIdHeader'
      - $ref: '#/components/parameters/RequestTraceFlagHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationCodeGrpcRequest'
            example: {operatorCustomer: [{operatorCustomerNum: '12345678'}], accountCustomerNum: '87654321',
              accountBranch: '002'}
        required: true
      responses:
        '200':
          $ref: '#/components/responses/HttpOKwithOperationCodeGrpcResponseResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  headers:
    Access-Control-Allow-Origin:
      description: '*.garantibbva.com.tr'
      schema:
        type: string
    GUID:
      description: Header GUID
      schema:
        $ref: '#/components/parameters/GuidHeader'
  schemas:
    TransactionFilterResponseDto:
      type: object
      description: 'Schema from controller DTO: TransactionFilterResponseDto.'
      properties:
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
        customerNameAndSurname:
          type: string
          example: string
          description: Field "customerNameAndSurname"
        processDate:
          type: string
          example: string
          description: Field "processDate"
        approveType:
          type: string
          example: string
          description: Field "approveType"
        transactionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmount"
        status:
          type: string
          example: string
          description: Field "status"
        createUserId:
          type: string
          example: string
          description: Field "createUserId"
        approveUserId:
          type: string
          example: string
          description: Field "approveUserId"
      example: {instanceId: string, customerNameAndSurname: string, processDate: string,
        approveType: string, transactionAmount: 100.5, status: string, createUserId: string,
        approveUserId: string}
    TransactionMessageResponseDto:
      type: object
      description: 'Schema from controller DTO: TransactionMessageResponseDto.'
      properties:
        message:
          type: string
          example: string
          description: Field "message"
        customerNum:
          type: integer
          format: int32
          example: 123
          description: Field "customerNum"
      example: {message: string, customerNum: 123}
    OperationCodeResponseDto:
      type: object
      description: 'Schema from controller DTO: OperationCodeResponseDto.'
      properties:
        opCode1:
          type: string
          example: string
          description: Field "opCode1"
        opCode2:
          type: string
          example: string
          description: Field "opCode2"
      example: {opCode1: string, opCode2: string}
    ChequeMoney:
      type: object
      description: 'Schema from controller DTO: ChequeMoney.'
      properties:
        amount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "amount"
        currency:
          type: string
          example: string
          description: Field "currency"
      example: {amount: 100.5, currency: string}
    TransactionDto:
      type: object
      description: 'Schema from controller DTO: TransactionDto.'
      properties:
        operationType:
          type: string
          example: string
          description: Field "operationType"
        processDate:
          type: string
          example: string
          description: Field "processDate"
        customerNumber:
          type: integer
          format: int32
          example: 123
          description: Field "customerNumber"
        accountBranchCode:
          type: integer
          format: int32
          example: 123
          description: Field "accountBranchCode"
        customerAccountNum:
          type: integer
          format: int32
          example: 123
          description: Field "customerAccountNum"
        ownerUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "ownerUnitNum"
        approvalUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "approvalUnitNum"
        transactionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmount"
        currencyCode:
          type: string
          example: string
          description: Field "currencyCode"
        transactionTLAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionTLAmount"
        currencyRate:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "currencyRate"
        currencyType:
          type: string
          example: string
          description: Field "currencyType"
        rateType:
          type: string
          example: string
          description: Field "rateType"
        channelCode:
          type: string
          example: string
          description: Field "channelCode"
        channelType:
          type: string
          example: string
          description: Field "channelType"
        channelDetailText:
          type: string
          example: string
          description: Field "channelDetailText"
        financialDomainCode:
          type: string
          example: string
          description: Field "financialDomainCode"
        financialFamilyCode:
          type: string
          example: string
          description: Field "financialFamilyCode"
        financialSubFamilyCode:
          type: string
          example: string
          description: Field "financialSubFamilyCode"
        purposeValueCode:
          type: string
          example: string
          description: Field "purposeValueCode"
        receiptInfoId:
          type: string
          example: string
          description: Field "receiptInfoId"
        contractInfoId:
          type: string
          example: string
          description: Field "contractInfoId"
        accountingGuid:
          type: string
          example: string
          description: Field "accountingGuid"
        priceInqueryId:
          type: string
          example: string
          description: Field "priceInqueryId"
        surveyInfoId:
          type: string
          example: string
          description: Field "surveyInfoId"
        gmaticId:
          type: string
          example: string
          description: Field "gmaticId"
        commisionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "commisionAmount"
        commisionCurrencyCode:
          type: string
          example: string
          description: Field "commisionCurrencyCode"
        chargeAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "chargeAmount"
        chargeCurrencyCode:
          type: string
          example: string
          description: Field "chargeCurrencyCode"
        taxAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "taxAmount"
        taxCurrencyCode:
          type: string
          example: string
          description: Field "taxCurrencyCode"
        statusCode:
          type: string
          example: string
          description: Field "statusCode"
        cicsTxnId:
          type: string
          example: string
          description: Field "cicsTxnId"
        checkNumber:
          type: string
          example: string
          description: Field "checkNumber"
        goldValuationId:
          type: string
          example: string
          description: Field "goldValuationId"
        prosecutorNotificationInfo:
          type: string
          example: string
          description: Field "prosecutorNotificationInfo"
        transactionRelationType:
          type: string
          example: string
          description: Field "transactionRelationType"
        transactionExplanationText:
          type: string
          example: string
          description: Field "transactionExplanationText"
        requestText:
          type: string
          example: string
          description: Field "requestText"
      example: {operationType: string, processDate: string, customerNumber: 123, accountBranchCode: 123,
        customerAccountNum: 123, ownerUnitNum: 123, approvalUnitNum: 123, transactionAmount: 100.5,
        currencyCode: string, transactionTLAmount: 100.5, currencyRate: 100.5, currencyType: string,
        rateType: string, channelCode: string, channelType: string, channelDetailText: string,
        financialDomainCode: string, financialFamilyCode: string, financialSubFamilyCode: string,
        purposeValueCode: string, receiptInfoId: string, contractInfoId: string, accountingGuid: string,
        priceInqueryId: string, surveyInfoId: string, gmaticId: string, commisionAmount: 100.5,
        commisionCurrencyCode: string, chargeAmount: 100.5, chargeCurrencyCode: string,
        taxAmount: 100.5, taxCurrencyCode: string, statusCode: string, cicsTxnId: string,
        checkNumber: string, goldValuationId: string, prosecutorNotificationInfo: string,
        transactionRelationType: string, transactionExplanationText: string, requestText: string}
    ProcessRequestDto:
      type: object
      description: 'Schema from controller DTO: ProcessRequestDto.'
      properties:
        pagination:
          allOf:
          - $ref: '#/components/schemas/PageableInboundDto'
          description: Field "pagination"
          example: {}
        filter:
          allOf:
          - $ref: '#/components/schemas/ProcessFilterRequestDto'
          description: Field "filter"
          example: {}
      example: {pagination: {}, filter: {}}
    GetPdfResponseDto:
      type: object
      description: 'Schema from controller DTO: GetPdfResponseDto.'
      properties:
        returnCode:
          type: string
          example: string
          description: Field "returnCode"
        returnMsg:
          type: string
          example: string
          description: Field "returnMsg"
        printType:
          type: string
          example: string
          description: Field "printType"
        paperTrayText:
          type: string
          example: string
          description: Field "paperTrayText"
        secPaperTrayText:
          type: string
          example: string
          description: Field "secPaperTrayText"
        pdfData:
          type: string
          example: string
          description: Field "pdfData"
      example: {returnCode: string, returnMsg: string, printType: string, paperTrayText: string,
        secPaperTrayText: string, pdfData: string}
    CommissionServerData:
      type: object
      description: 'Schema from controller DTO: CommissionServerData.'
      properties:
        userId:
          type: string
          example: string
          description: Field "userId"
        referenceId:
          type: string
          example: string
          description: Field "referenceId"
      example: {userId: string, referenceId: string}
    CreateSinglePdfResponseDto:
      type: object
      description: 'Schema from controller DTO: CreateSinglePdfResponseDto.'
      properties:
        returnCode:
          type: string
          example: string
          description: Field "returnCode"
        returnMsg:
          type: string
          example: string
          description: Field "returnMsg"
        documentId:
          type: string
          example: string
          description: Field "documentId"
      example: {returnCode: string, returnMsg: string, documentId: string}
    TrnxCompleteWithdrawalResponseDto:
      type: object
      description: 'Schema from controller DTO: TrnxCompleteWithdrawalResponseDto.'
      properties:
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
        approvalRequired:
          type: boolean
          example: true
          description: Field "approvalRequired"
      example: {instanceId: string, approvalRequired: true}
    TransactionStatusUpdateRequestDto:
      type: object
      description: 'Schema from controller DTO: TransactionStatusUpdateRequestDto.'
      properties:
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
        status:
          type: string
          example: string
          description: Field "status"
        approveInstanceId:
          type: string
          example: string
          description: Field "approveInstanceId"
      example: {instanceId: string, status: string, approveInstanceId: string}
    DigitalOrderReadResponseDto:
      type: object
      description: 'Schema from controller DTO: DigitalOrderReadResponseDto.'
      properties:
        readBranchInstructionDepositWithdrawal:
          type: array
          items:
            $ref: '#/components/schemas/ReadBranchInstructionDepositWithdrawalDto'
          description: Field "readBranchInstructionDepositWithdrawal"
          example: [string]
      example: {readBranchInstructionDepositWithdrawal: [string]}
    OperationCode:
      type: object
      description: 'Schema from controller DTO: OperationCode.'
      properties:
        opCode1:
          type: string
          example: string
          description: Field "opCode1"
        opCode2:
          type: string
          example: string
          description: Field "opCode2"
      example: {opCode1: string, opCode2: string}
    ServerData:
      type: object
      description: 'Schema from controller DTO: ServerData.'
      properties:
        userId:
          type: string
          example: string
          description: Field "userId"
        referenceId:
          type: string
          example: string
          description: Field "referenceId"
      example: {userId: string, referenceId: string}
    GetSinglePdfRequestDto:
      type: object
      description: 'Schema from controller DTO: GetSinglePdfRequestDto.'
      properties:
        documentId:
          type: string
          example: string
          description: Field "documentId"
        userId:
          type: string
          example: string
          description: Field "userId"
        authUserId:
          type: string
          example: string
          description: Field "authUserId"
      example: {documentId: string, userId: string, authUserId: string}
    OperationCodeItem:
      type: object
      description: 'Schema from controller DTO: OperationCodeItem.'
      properties:
        processMainCode:
          type: string
          example: string
          description: Field "processMainCode"
        processSubCode:
          type: string
          example: string
          description: Field "processSubCode"
        processDescription:
          type: string
          example: string
          description: Field "processDescription"
      example: {processMainCode: string, processSubCode: string, processDescription: string}
    GetChequeCostRequest:
      type: object
      description: 'Schema from controller DTO: GetChequeCostRequest.'
      properties:
        customerNo:
          type: string
          example: string
          description: Field "customerNo"
        opCode:
          allOf:
          - $ref: '#/components/schemas/OperationCode'
          description: Field "opCode"
          example: {}
        chequeAmount:
          allOf:
          - $ref: '#/components/schemas/ChequeMoney'
          description: Field "chequeAmount"
          example: {}
        account:
          allOf:
          - $ref: '#/components/schemas/Account'
          description: Field "account"
          example: {}
        commissionServerData:
          allOf:
          - $ref: '#/components/schemas/CommissionServerData'
          description: Field "commissionServerData"
          example: {}
      example: {customerNo: string, opCode: {}, chequeAmount: {}, account: {}, commissionServerData: {}}
    ProcessingPersonInfoRequest:
      type: object
      description: 'Schema from controller DTO: ProcessingPersonInfoRequest.'
      properties:
        statusCode:
          type: string
          example: string
          description: Field "statusCode"
        processCustomerNum:
          type: string
          example: string
          description: Field "processCustomerNum"
      example: {statusCode: string, processCustomerNum: string}
    ProcessStateChangeRequestDto:
      type: object
      description: 'Schema from controller DTO: ProcessStateChangeRequestDto.'
      properties:
        operationType:
          type: string
          example: string
          description: Field "operationType"
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
      example: {operationType: string, instanceId: string}
    ProcessFilterRequestDto:
      type: object
      description: 'Schema from controller DTO: ProcessFilterRequestDto.'
      properties:
        status:
          type: string
          example: string
          description: Field "status"
        approveType:
          type: string
          example: string
          description: Field "approveType"
        approvalUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "approvalUnitNum"
        transactionAmountMin:
          type: string
          example: string
          description: Field "transactionAmountMin"
        transactionAmountMax:
          type: string
          example: string
          description: Field "transactionAmountMax"
        approveDateFirst:
          type: string
          example: string
          description: Field "approveDateFirst"
        approveDateLast:
          type: string
          example: string
          description: Field "approveDateLast"
        approveOrder:
          type: integer
          format: int32
          example: 123
          description: Field "approveOrder"
        financialSubFamilyCode:
          type: string
          example: string
          description: Field "financialSubFamilyCode"
        financialFamilyCode:
          type: string
          example: string
          description: Field "financialFamilyCode"
      example: {status: string, approveType: string, approvalUnitNum: 123, transactionAmountMin: string,
        transactionAmountMax: string, approveDateFirst: string, approveDateLast: string,
        approveOrder: 123, financialSubFamilyCode: string, financialFamilyCode: string}
    OperationCodeRequestDto:
      type: object
      description: 'Schema from controller DTO: OperationCodeRequestDto.'
      properties:
        operatorCustomer:
          type: array
          items:
            $ref: '#/components/schemas/OpCodeCustomerDto'
          description: Field "operatorCustomer"
          example: [string]
        accountCustomerNum:
          type: string
          example: string
          description: Field "accountCustomerNum"
        accountBranch:
          type: string
          example: string
          description: Field "accountBranch"
        accountNumber:
          type: integer
          format: int32
          example: 123
          description: Field "accountNumber"
      example: {operatorCustomer: [string], accountCustomerNum: string, accountBranch: string,
        accountNumber: 123}
    TrnxCompleteWithdrawalRequestDto:
      type: object
      description: 'Schema from controller DTO: TrnxCompleteWithdrawalRequestDto.'
      properties:
        operationType:
          type: string
          example: string
          description: Field "operationType"
        customerNumber:
          type: integer
          format: int32
          example: 123
          description: Field "customerNumber"
        accountBranchCode:
          type: integer
          format: int32
          example: 123
          description: Field "accountBranchCode"
        customerAccountNum:
          type: integer
          format: int32
          example: 123
          description: Field "customerAccountNum"
        transactionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmount"
        createUserId:
          type: string
          example: string
          description: Field "createUserId"
        channelCode:
          type: string
          example: string
          description: Field "channelCode"
        channelDetailText:
          type: string
          example: string
          description: Field "channelDetailText"
        operation1Code:
          type: string
          example: string
          description: Field "operation1Code"
        operation2Code:
          type: string
          example: string
          description: Field "operation2Code"
        relatedProductCode:
          type: string
          example: string
          description: Field "relatedProductCode"
        purposeValueCode:
          type: string
          example: string
          description: Field "purposeValueCode"
        surveyIfoId:
          type: string
          example: string
          description: Field "surveyIfoId"
        commissionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "commissionAmount"
        commissionCurrencyCode:
          type: string
          example: string
          description: Field "commissionCurrencyCode"
        priceInqueryId:
          type: string
          example: string
          description: Field "priceInqueryId"
        chargeAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "chargeAmount"
        chargeCurrencyCode:
          type: string
          example: string
          description: Field "chargeCurrencyCode"
        requestText:
          type: string
          example: string
          description: Field "requestText"
        transactionExplanationText:
          type: string
          example: string
          description: Field "transactionExplanationText"
        checkNumber:
          type: string
          example: string
          description: Field "checkNumber"
        goldValuationId:
          type: string
          example: string
          description: Field "goldValuationId"
        prosecutorNotificationInfo:
          type: string
          example: string
          description: Field "prosecutorNotificationInfo"
        transactionRelationType:
          type: string
          example: string
          description: Field "transactionRelationType"
        gmaticId:
          type: string
          example: string
          description: Field "gmaticId"
        currencyCode:
          type: string
          example: string
          description: Field "currencyCode"
        tcNumber:
          type: string
          example: string
          description: Field "tcNumber"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        isCheck:
          type: boolean
          example: true
          description: Field "isCheck"
        atmInfo:
          allOf:
          - $ref: '#/components/schemas/AtmInfoRequest'
          description: Field "atmInfo"
          example: {}
        processingPersonInfo:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingPersonInfoRequest'
          description: Field "processingPersonInfo"
          example: [string]
        customerName:
          type: string
          example: string
          description: Field "customerName"
        customerSurname:
          type: string
          example: string
          description: Field "customerSurname"
        accountBalanceAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "accountBalanceAmount"
        addressLine1:
          type: string
          example: string
          description: Field "addressLine1"
        addressLine2:
          type: string
          example: string
          description: Field "addressLine2"
        regionName:
          type: string
          example: string
          description: Field "regionName"
        districtName:
          type: string
          example: string
          description: Field "districtName"
        cityName:
          type: string
          example: string
          description: Field "cityName"
        postalCode:
          type: string
          example: string
          description: Field "postalCode"
        phoneNumber:
          type: string
          example: string
          description: Field "phoneNumber"
        cicsTxnId:
          type: string
          example: string
          description: Field "cicsTxnId"
        sourceId:
          type: string
          example: string
          description: Field "sourceId"
        kpsValidationBypass:
          type: boolean
          example: true
          description: Field "kpsValidationBypass"
      example: {operationType: string, customerNumber: 123, accountBranchCode: 123,
        customerAccountNum: 123, transactionAmount: 100.5, createUserId: string, channelCode: string,
        channelDetailText: string, operation1Code: string, operation2Code: string,
        relatedProductCode: string, purposeValueCode: string, surveyIfoId: string,
        commissionAmount: 100.5, commissionCurrencyCode: string, priceInqueryId: string,
        chargeAmount: 100.5, chargeCurrencyCode: string, requestText: string, transactionExplanationText: string,
        checkNumber: string, goldValuationId: string, prosecutorNotificationInfo: string,
        transactionRelationType: string, gmaticId: string, currencyCode: string, tcNumber: string,
        birthDate: string, isCheck: true, atmInfo: {}, processingPersonInfo: [string],
        customerName: string, customerSurname: string, accountBalanceAmount: 100.5,
        addressLine1: string, addressLine2: string, regionName: string, districtName: string,
        cityName: string, postalCode: string, phoneNumber: string, cicsTxnId: string,
        sourceId: string, kpsValidationBypass: true}
    CustomerInfoResponseDto:
      type: object
      description: 'Schema from controller DTO: CustomerInfoResponseDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        citizen:
          type: string
          example: string
          description: Field "citizen"
        mernisNum:
          type: string
          example: string
          description: Field "mernisNum"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        otherNationalityId:
          type: string
          example: string
          description: Field "otherNationalityId"
        customerType:
          type: string
          example: string
          description: Field "customerType"
        isOperant:
          type: boolean
          example: true
          description: Field "isOperant"
        operantMessages:
          type: array
          items:
            type: string
            example: string
          description: Field "operantMessages"
          example: [string]
        isActivePerson:
          type: boolean
          example: true
          description: Field "isActivePerson"
        customerSubType:
          type: string
          example: string
          description: Field "customerSubType"
        customerSubType2:
          type: string
          example: string
          description: Field "customerSubType2"
      example: {customerNum: string, name: string, surname: string, citizen: string,
        mernisNum: string, birthDate: string, otherNationalityId: string, customerType: string,
        isOperant: true, operantMessages: [string], isActivePerson: true, customerSubType: string,
        customerSubType2: string}
    ProcessStateChangeResponseDto:
      type: object
      description: 'Schema from controller DTO: ProcessStateChangeResponseDto.'
      properties:
        message:
          type: string
          example: string
          description: Field "message"
      example: {message: string}
    SaveRepresentativePersonDto:
      type: object
      description: 'Schema from controller DTO: SaveRepresentativePersonDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        citizenText:
          type: string
          example: string
          description: Field "citizenText"
        mernisNum:
          type: string
          example: string
          description: Field "mernisNum"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        otherNationalityId:
          type: string
          example: string
          description: Field "otherNationalityId"
      example: {customerNum: string, name: string, surname: string, citizenText: string,
        mernisNum: string, birthDate: string, otherNationalityId: string}
    FindTransactionRequestDto:
      type: object
      description: 'Schema from controller DTO: FindTransactionRequestDto.'
      properties:
        customerNumber:
          type: integer
          format: int32
          example: 123
          description: Field "customerNumber"
      example: {customerNumber: 123}
    CustomerInfoRequestDto:
      type: object
      description: 'Schema from controller DTO: CustomerInfoRequestDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
      example: {customerNum: string}
    BranchInfo:
      type: object
      description: 'Schema from controller DTO: BranchInfo.'
      properties:
        branchName:
          type: string
          example: string
          description: Field "branchName"
        branchCity:
          type: string
          example: string
          description: Field "branchCity"
        branchDistrict:
          type: string
          example: string
          description: Field "branchDistrict"
        countryCode:
          type: string
          example: string
          description: Field "countryCode"
        branchAddress:
          type: string
          example: string
          description: Field "branchAddress"
        referenceNumber:
          type: integer
          format: int32
          example: 123
          description: Field "referenceNumber"
      example: {branchName: string, branchCity: string, branchDistrict: string, countryCode: string,
        branchAddress: string, referenceNumber: 123}
    SaveTransactionCustomerRequestDto:
      type: object
      description: 'Schema from controller DTO: SaveTransactionCustomerRequestDto.'
      properties:
        nationalIdNum:
          type: string
          example: string
          description: Field "nationalIdNum"
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        nationalityCode:
          type: string
          example: string
          description: Field "nationalityCode"
        kktcNationalId:
          type: string
          example: string
          description: Field "kktcNationalId"
        passportId:
          type: string
          example: string
          description: Field "passportId"
        countryCode:
          type: string
          example: string
          description: Field "countryCode"
        birthPlace:
          type: string
          example: string
          description: Field "birthPlace"
        fatherName:
          type: string
          example: string
          description: Field "fatherName"
        motherName:
          type: string
          example: string
          description: Field "motherName"
        workingType:
          type: string
          example: string
          description: Field "workingType"
        jobTitle:
          type: string
          example: string
          description: Field "jobTitle"
        cityCode:
          type: string
          example: string
          description: Field "cityCode"
        cityName:
          type: string
          example: string
          description: Field "cityName"
        countyName:
          type: string
          example: string
          description: Field "countyName"
        phoneCountryCode:
          type: string
          example: string
          description: Field "phoneCountryCode"
        phoneNum:
          type: string
          example: string
          description: Field "phoneNum"
        postcode:
          type: string
          example: string
          description: Field "postcode"
        address:
          type: string
          example: string
          description: Field "address"
        addressType:
          type: string
          example: string
          description: Field "addressType"
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
      example: {nationalIdNum: string, name: string, surname: string, birthDate: string,
        nationalityCode: string, kktcNationalId: string, passportId: string, countryCode: string,
        birthPlace: string, fatherName: string, motherName: string, workingType: string,
        jobTitle: string, cityCode: string, cityName: string, countyName: string,
        phoneCountryCode: string, phoneNum: string, postcode: string, address: string,
        addressType: string, customerNum: string}
    AccountTransactionRulesRequestDto:
      type: object
      description: 'Schema from controller DTO: AccountTransactionRulesRequestDto.'
      properties:
        debitUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "debitUnitNum"
        debitAccountNum:
          type: integer
          format: int32
          example: 123
          description: Field "debitAccountNum"
        transactionAmount:
          type: string
          example: string
          description: Field "transactionAmount"
        currencyCode:
          type: string
          example: string
          description: Field "currencyCode"
        transactionDate:
          type: string
          example: string
          description: Field "transactionDate"
        oprtnCustList:
          type: array
          items:
            type: string
            example: string
          description: Field "oprtnCustList"
          example: [string]
      example: {debitUnitNum: 123, debitAccountNum: 123, transactionAmount: string,
        currencyCode: string, transactionDate: string, oprtnCustList: [string]}
    RepresentativePersonDto:
      type: object
      description: 'Schema from controller DTO: RepresentativePersonDto.'
      properties:
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
      example: {name: string, surname: string, customerNum: string}
    CreateSinglePdfRequestDto:
      type: object
      description: 'Schema from controller DTO: CreateSinglePdfRequestDto.'
      properties:
        documentType:
          type: string
          example: string
          description: Field "documentType"
        documentStatus:
          type: string
          example: string
          description: Field "documentStatus"
        async:
          type: string
          example: string
          description: Field "async"
        userId:
          type: string
          example: string
          description: Field "userId"
        authUserId:
          type: string
          example: string
          description: Field "authUserId"
        xmlData:
          type: string
          example: string
          description: Field "xmlData"
        date:
          type: string
          example: string
          description: Field "date"
        commissionRate:
          type: number
          format: double
          example: 123.45
          description: Field "commissionRate"
        transactionAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmount"
        customerInfo:
          type: array
          items:
            $ref: '#/components/schemas/CustomerInfo'
          description: Field "customerInfo"
          example: [string]
        branchInfo:
          allOf:
          - $ref: '#/components/schemas/BranchInfo'
          description: Field "branchInfo"
          example: {}
      example: {documentType: string, documentStatus: string, async: string, userId: string,
        authUserId: string, xmlData: string, date: string, commissionRate: 123.45,
        transactionAmount: 100.5, customerInfo: [string], branchInfo: {}}
    TransactionListDto:
      type: object
      description: 'Schema from controller DTO: TransactionListDto.'
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionDto'
          description: Field "transactions"
          example: [string]
      example: {transactions: [string]}
    AccountTransactionRulesResponseDto:
      type: object
      description: 'Schema from controller DTO: AccountTransactionRulesResponseDto.'
      properties:
        messages:
          type: array
          items:
            type: string
            example: string
          description: Field "messages"
          example: [string]
        accountUsableBalanceAmount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "accountUsableBalanceAmount"
        debitUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "debitUnitNum"
        debitAccountNum:
          type: integer
          format: int32
          example: 123
          description: Field "debitAccountNum"
        debitCustomerFirstName:
          type: string
          example: string
          description: Field "debitCustomerFirstName"
        debitCustomerLastName:
          type: string
          example: string
          description: Field "debitCustomerLastName"
        debitAccountCurrCode:
          type: string
          example: string
          description: Field "debitAccountCurrCode"
        debitAccountCustomerNum:
          type: integer
          format: int32
          example: 123
          description: Field "debitAccountCustomerNum"
        debitCustomerType:
          type: string
          example: string
          description: Field "debitCustomerType"
        checkRelatedAccount:
          type: string
          example: string
          description: Field "checkRelatedAccount"
      example: {messages: [string], accountUsableBalanceAmount: 100.5, debitUnitNum: 123,
        debitAccountNum: 123, debitCustomerFirstName: string, debitCustomerLastName: string,
        debitAccountCurrCode: string, debitAccountCustomerNum: 123, debitCustomerType: string,
        checkRelatedAccount: string}
    ProcessResponseDto:
      type: object
      description: 'Schema from controller DTO: ProcessResponseDto.'
      properties:
        moneyTransactionId:
          type: string
          example: string
          description: Field "moneyTransactionId"
        status:
          type: string
          example: string
          description: Field "status"
        approveOrder:
          type: integer
          format: int32
          example: 123
          description: Field "approveOrder"
        approveType:
          type: string
          example: string
          description: Field "approveType"
        approveUserRole:
          type: integer
          format: int32
          example: 123
          description: Field "approveUserRole"
        approveUserId:
          type: string
          example: string
          description: Field "approveUserId"
        approveDate:
          type: string
          example: string
          description: Field "approveDate"
        approvalUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "approvalUnitNum"
        transactionAmount:
          type: string
          example: string
          description: Field "transactionAmount"
        customerNumber:
          type: integer
          format: int32
          example: 123
          description: Field "customerNumber"
        createUserId:
          type: string
          example: string
          description: Field "createUserId"
        requestText:
          type: string
          example: string
          description: Field "requestText"
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
      example: {moneyTransactionId: string, status: string, approveOrder: 123, approveType: string,
        approveUserRole: 123, approveUserId: string, approveDate: string, approvalUnitNum: 123,
        transactionAmount: string, customerNumber: 123, createUserId: string, requestText: string,
        instanceId: string}
    Account:
      type: object
      description: 'Schema from controller DTO: Account.'
      properties:
        branch:
          type: integer
          format: int32
          example: 123
          description: Field "branch"
        number:
          type: string
          example: string
          description: Field "number"
      example: {branch: 123, number: string}
    GetBulkOperationCodeResponseDto:
      type: object
      description: 'Schema from controller DTO: GetBulkOperationCodeResponseDto.'
      properties:
        operationCodeItems:
          type: array
          items:
            $ref: '#/components/schemas/OperationCodeItem'
          description: Field "operationCodeItems"
          example: [string]
        processMainCode:
          type: string
          example: string
          description: Field "processMainCode"
        processSubCode:
          type: string
          example: string
          description: Field "processSubCode"
        processDescription:
          type: string
          example: string
          description: Field "processDescription"
      example: {operationCodeItems: [string], processMainCode: string, processSubCode: string,
        processDescription: string}
    TransactionStatusUpdateResponseDto:
      type: object
      description: 'Schema from controller DTO: TransactionStatusUpdateResponseDto.'
      properties:
        success:
          type: boolean
          example: true
          description: Field "success"
      example: {success: true}
    GetKpsInfoRequestDto:
      type: object
      description: 'Schema from controller DTO: GetKpsInfoRequestDto.'
      properties:
        nationalId:
          type: string
          example: string
          description: Field "nationalId"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        inquiryDateMargin:
          type: integer
          format: int32
          example: 123
          description: Field "inquiryDateMargin"
      example: {nationalId: string, birthDate: string, inquiryDateMargin: 123}
    PageableInboundDto:
      type: object
      description: 'Schema from controller DTO: PageableInboundDto.'
      properties:
        page:
          type: integer
          format: int32
          example: 123
          description: Field "page"
        size:
          type: integer
          format: int32
          example: 123
          description: Field "size"
        sort:
          allOf:
          - $ref: '#/components/schemas/SortInboundDto'
          description: Field "sort"
          example: {}
      example: {page: 123, size: 123, sort: {}}
    ExtendedCustomerInfoDto:
      type: object
      description: 'Schema from controller DTO: ExtendedCustomerInfoDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        citizenText:
          type: string
          example: string
          description: Field "citizenText"
        mernisNum:
          type: string
          example: string
          description: Field "mernisNum"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        otherNationalityId:
          type: string
          example: string
          description: Field "otherNationalityId"
        settledCountryCode:
          type: string
          example: string
          description: Field "settledCountryCode"
        birthPlace:
          type: string
          example: string
          description: Field "birthPlace"
        motherName:
          type: string
          example: string
          description: Field "motherName"
        fatherName:
          type: string
          example: string
          description: Field "fatherName"
        phoneNumCountryCode:
          type: string
          example: string
          description: Field "phoneNumCountryCode"
        phoneNum:
          type: string
          example: string
          description: Field "phoneNum"
        pasaportNumText:
          type: string
          example: string
          description: Field "pasaportNumText"
        addressType:
          type: string
          example: string
          description: Field "addressType"
        countryCode:
          type: string
          example: string
          description: Field "countryCode"
        cityCode:
          type: string
          example: string
          description: Field "cityCode"
        addressLine:
          type: string
          example: string
          description: Field "addressLine"
        postalCode:
          type: string
          example: string
          description: Field "postalCode"
        regionName:
          type: string
          example: string
          description: Field "regionName"
        workingStyle:
          type: string
          example: string
          description: Field "workingStyle"
        jobTitle:
          type: string
          example: string
          description: Field "jobTitle"
      example: {customerNum: string, name: string, surname: string, citizenText: string,
        mernisNum: string, birthDate: string, otherNationalityId: string, settledCountryCode: string,
        birthPlace: string, motherName: string, fatherName: string, phoneNumCountryCode: string,
        phoneNum: string, pasaportNumText: string, addressType: string, countryCode: string,
        cityCode: string, addressLine: string, postalCode: string, regionName: string,
        workingStyle: string, jobTitle: string}
    SaveRepresentativePersonRequestDto:
      type: object
      description: 'Schema from controller DTO: SaveRepresentativePersonRequestDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
        opnDefinedKey:
          type: string
          example: string
          description: Field "opnDefinedKey"
        partyType:
          type: string
          example: string
          description: Field "partyType"
        recordStatus:
          type: string
          example: string
          description: Field "recordStatus"
      example: {customerNum: string, opnDefinedKey: string, partyType: string, recordStatus: string}
    HeaderInfo:
      type: object
      description: 'Schema from controller DTO: HeaderInfo.'
      properties:
        command:
          type: string
          example: string
          description: Field "command"
        sourceProgramId:
          type: string
          example: string
          description: Field "sourceProgramId"
        unitNum:
          type: string
          example: string
          description: Field "unitNum"
        channelCode:
          type: string
          example: string
          description: Field "channelCode"
        moduleCode:
          type: string
          example: string
          description: Field "moduleCode"
        submoduleCode:
          type: string
          example: string
          description: Field "submoduleCode"
      example: {command: string, sourceProgramId: string, unitNum: string, channelCode: string,
        moduleCode: string, submoduleCode: string}
    OpCodeCustomerDto:
      type: object
      description: 'Schema from controller DTO: OpCodeCustomerDto.'
      properties:
        operatorCustomerNum:
          type: string
          example: string
          description: Field "operatorCustomerNum"
      example: {operatorCustomerNum: string}
    SortInboundDto:
      type: object
      description: 'Schema from controller DTO: SortInboundDto.'
      properties:
        field:
          type: string
          example: string
          description: Field "field"
        direction:
          allOf:
          - $ref: '#/components/schemas/SortDirection'
          description: Field "direction"
          example: {}
      example: {field: string, direction: {}}
    ApproveBulkFraudProcessResponseDto:
      type: object
      description: 'Schema from controller DTO: ApproveBulkFraudProcessResponseDto.'
      properties:
        message:
          type: string
          example: string
          description: Field "message"
      example: {message: string}
    DigitalOrderReadRequestDto:
      type: object
      description: 'Schema from controller DTO: DigitalOrderReadRequestDto.'
      properties:
        instructionId:
          type: string
          format: int64
          example: '123456789'
          description: Field "instructionId"
        customerNum:
          type: integer
          format: int32
          example: 123
          description: Field "customerNum"
        accountNumber:
          type: integer
          format: int32
          example: 123
          description: Field "accountNumber"
        branchCode:
          type: integer
          format: int32
          example: 123
          description: Field "branchCode"
        amount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "amount"
        currencyCode:
          type: string
          example: string
          description: Field "currencyCode"
        identityNumber:
          type: string
          example: string
          description: Field "identityNumber"
        documentId:
          type: string
          example: string
          description: Field "documentId"
        transactionDate:
          type: string
          example: string
          description: Field "transactionDate"
        status:
          type: string
          example: string
          description: Field "status"
        transactionType:
          type: integer
          format: int32
          example: 123
          description: Field "transactionType"
        processUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "processUnitNum"
      example: {instructionId: '123456789', customerNum: 123, accountNumber: 123,
        branchCode: 123, amount: 100.5, currencyCode: string, identityNumber: string,
        documentId: string, transactionDate: string, status: string, transactionType: 123,
        processUnitNum: 123}
    AtmInfoRequest:
      type: object
      description: 'Schema from controller DTO: AtmInfoRequest.'
      properties:
        cardNo:
          type: string
          example: string
          description: Field "cardNo"
        isQr:
          type: boolean
          example: true
          description: Field "isQr"
        qrId:
          type: string
          example: string
          description: Field "qrId"
        atmNumber:
          type: string
          example: string
          description: Field "atmNumber"
        isCommission:
          type: boolean
          example: true
          description: Field "isCommission"
      example: {cardNo: string, isQr: true, qrId: string, atmNumber: string, isCommission: true}
    GetChequeCostResponse:
      type: object
      description: 'Schema from controller DTO: GetChequeCostResponse.'
      properties:
        cost:
          allOf:
          - $ref: '#/components/schemas/ChequeMoney'
          description: Field "cost"
          example: {}
        isCommissionFree:
          type: boolean
          example: true
          description: Field "isCommissionFree"
      example: {cost: {}, isCommissionFree: true}
    TransactionFilterRequestDto:
      type: object
      description: 'Schema from controller DTO: TransactionFilterRequestDto.'
      properties:
        statusCode:
          type: string
          example: string
          description: Field "statusCode"
        ownerUnitNum:
          type: string
          example: string
          description: Field "ownerUnitNum"
        moneyTransactionIdStart:
          type: string
          example: string
          description: Field "moneyTransactionIdStart"
        moneyTransactionIdEnd:
          type: string
          example: string
          description: Field "moneyTransactionIdEnd"
        approveType:
          type: string
          example: string
          description: Field "approveType"
        financialSubFamilyCode:
          type: string
          example: string
          description: Field "financialSubFamilyCode"
        financialFamilyCode:
          type: string
          example: string
          description: Field "financialFamilyCode"
        transactionAmountMin:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmountMin"
        transactionAmountMax:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "transactionAmountMax"
      example: {statusCode: string, ownerUnitNum: string, moneyTransactionIdStart: string,
        moneyTransactionIdEnd: string, approveType: string, financialSubFamilyCode: string,
        financialFamilyCode: string, transactionAmountMin: 100.5, transactionAmountMax: 100.5}
    ReadBranchInstructionDepositWithdrawalDto:
      type: object
      description: 'Schema from controller DTO: ReadBranchInstructionDepositWithdrawalDto.'
      properties:
        instructionId:
          type: string
          format: int64
          example: '123456789'
          description: Field "instructionId"
        customerNum:
          type: integer
          format: int32
          example: 123
          description: Field "customerNum"
        accountNumber:
          type: integer
          format: int32
          example: 123
          description: Field "accountNumber"
        branchCode:
          type: integer
          format: int32
          example: 123
          description: Field "branchCode"
        amount:
          type: number
          format: bigdecimal
          example: 100.5
          description: Field "amount"
        currencyCode:
          type: string
          example: string
          description: Field "currencyCode"
        identityNumber:
          type: string
          example: string
          description: Field "identityNumber"
        documentId:
          type: string
          example: string
          description: Field "documentId"
        transactionDate:
          type: string
          example: string
          description: Field "transactionDate"
        status:
          type: string
          example: string
          description: Field "status"
        transactionType:
          type: integer
          format: int32
          example: 123
          description: Field "transactionType"
        processUnitNum:
          type: integer
          format: int32
          example: 123
          description: Field "processUnitNum"
      example: {instructionId: '123456789', customerNum: 123, accountNumber: 123,
        branchCode: 123, amount: 100.5, currencyCode: string, identityNumber: string,
        documentId: string, transactionDate: string, status: string, transactionType: 123,
        processUnitNum: 123}
    PaginationResultDto:
      type: object
      description: 'Schema from controller DTO: PaginationResultDto.'
      properties:
        totalCount:
          type: integer
          format: int32
          example: 123
          description: Field "totalCount"
        records:
          type: array
          items:
            $ref: '#/components/schemas/T'
          description: Field "records"
          example: [string]
      example: {totalCount: 123, records: [string]}
    ApproveBulkFraudProcessRequestDto:
      type: object
      description: 'Schema from controller DTO: ApproveBulkFraudProcessRequestDto.'
      properties:
        instanceId:
          type: string
          example: string
          description: Field "instanceId"
        status:
          type: string
          example: string
          description: Field "status"
      example: {instanceId: string, status: string}
    CustomerInfo:
      type: object
      description: 'Schema from controller DTO: CustomerInfo.'
      properties:
        customerFullName:
          type: string
          example: string
          description: Field "customerFullName"
        customerNumber:
          type: string
          format: int64
          example: '123456789'
          description: Field "customerNumber"
        customerAddress:
          type: string
          example: string
          description: Field "customerAddress"
        accountType:
          type: string
          example: string
          description: Field "accountType"
        tckn:
          type: string
          example: string
          description: Field "tckn"
        nationality:
          type: string
          example: string
          description: Field "nationality"
      example: {customerFullName: string, customerNumber: '123456789', customerAddress: string,
        accountType: string, tckn: string, nationality: string}
    GetKpsInfoResponseDto:
      type: object
      description: 'Schema from controller DTO: GetKpsInfoResponseDto.'
      properties:
        nationalIdNum:
          type: string
          example: string
          description: Field "nationalIdNum"
        name:
          type: string
          example: string
          description: Field "name"
        surname:
          type: string
          example: string
          description: Field "surname"
        birthDate:
          type: string
          example: string
          description: Field "birthDate"
        birthPlace:
          type: string
          example: string
          description: Field "birthPlace"
        fatherName:
          type: string
          example: string
          description: Field "fatherName"
        motherName:
          type: string
          example: string
          description: Field "motherName"
        serialCode:
          type: string
          example: string
          description: Field "serialCode"
        sequenceNumber:
          type: string
          format: int64
          example: '123456789'
          description: Field "sequenceNumber"
        newIdentityCard:
          type: boolean
          example: true
          description: Field "newIdentityCard"
      example: {nationalIdNum: string, name: string, surname: string, birthDate: string,
        birthPlace: string, fatherName: string, motherName: string, serialCode: string,
        sequenceNumber: '123456789', newIdentityCard: true}
    RepresentativePersonRequestDto:
      type: object
      description: 'Schema from controller DTO: RepresentativePersonRequestDto.'
      properties:
        customerNum:
          type: string
          example: string
          description: Field "customerNum"
        customerNum2:
          type: string
          example: string
          description: Field "customerNum2"
        relationTypeText:
          type: string
          example: string
          description: Field "relationTypeText"
        acceptableLatency:
          type: string
          example: string
          description: Field "acceptableLatency"
        shareRate:
          type: string
          example: string
          description: Field "shareRate"
        shareAmount:
          type: string
          example: string
          description: Field "shareAmount"
        confirmationDate:
          type: string
          example: string
          description: Field "confirmationDate"
      example: {customerNum: string, customerNum2: string, relationTypeText: string,
        acceptableLatency: string, shareRate: string, shareAmount: string, confirmationDate: string}
  responses:
    HttpOKwithTransactionGrpcResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionGrpcResponse'
    HttpOKwithCustomerRelationshipTypeResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CustomerRelationshipTypeResponse'
    HttpOKwithRepresentativePersonResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RepresentativePersonResponse'
    HttpOKwithOperationCodeGrpcResponseResult:
      description: OK.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationCodeGrpcResponse'
    BadRequest:
      description: Bad request.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    Forbiden:
      description: Forbidden
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    MethodNotAllowed:
      description: Method not allowed.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    ServerError:
      description: Internal Server error.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
    Unauthorized:
      description: Unauthorized.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        GUID:
          $ref: '#/components/headers/GUID'
  parameters:
    AuthorizationTokenHeader:
      name: Authorization
      in: header
      description: Oauth Access token information
      example: Bearer 4c4f8643-29e1-4b7f-b62c-03ea78dad48e
      required: false
      schema:
        type: string
    ContentTypeHeader:
      name: Content-Type
      in: header
      description: application/json , application/xml
      example: application/json
      required: true
      schema:
        type: string
    AcceptHeader:
      name: Accept
      in: header
      description: application/json , application/xml
      example: application/json
      required: true
      schema:
        type: string
    ChannelHeader:
      name: channel
      in: header
      description: Information on which channel the request comes
      example: ATM
      required: true
      schema:
        type: string
    IpHeader:
      name: ip
      in: header
      description: End User Client IP
      example: 127.0.0.1
      required: true
      schema:
        type: string
    DialectHeader:
      name: dialect
      in: header
      description: TR (Turkish) , EN (English) , RO (Romanca)
      example: TR
      required: true
      schema:
        maxLength: 2
        type: string
    TenantCompanyHeader:
      name: tenant-company-id
      in: header
      description: The id of the company from where the request is originated from
        (GAR, GFC, GES)
      example: GAR
      required: true
      schema:
        maxLength: 3
        type: string
    TenantGeolocationHeader:
      name: tenant-geolocation
      description: Location of where the request originated from.
      example: TUR
      in: header
      required: false
      schema:
        maxLength: 3
        type: string
    TenantAppIdHeader:
      name: tenant-app-id
      description: Application or Service identdification number
      example: 7e6584354f5e6624518686f6eb124265
      in: header
      required: false
      schema:
        type: string
    ApiKeyHeader:
      name: api-key
      description: It is needed for Customer and Third-Party Services
      example: l7xx766d3fc85ca74b4bbe582e529e62747a
      in: header
      required: false
      schema:
        type: string
    GuidHeader:
      name: guid
      in: header
      description: It is used to process trace. The GUID  must be a unique value for
        each request
      example: '123456789012345678901234567'
      required: true
      schema:
        type: string
    UserIdHeader:
      name: user-id
      description: 'User Id '
      example: ME07684
      in: header
      required: false
      schema:
        type: string
    ClientIdHeader:
      name: client-id
      description: The client Id is defined by access manager for getting authorization
        code and access token
      example: QqWCRHVzntITMgBoa61f
      in: header
      required: false
      schema:
        type: string
    RequestTraceFlagHeader:
      name: request-trace-flag
      description: 'true: log the request-response paylod in backend application.false:
        DO NOT log the request-response paylod in backend application.'
      example: 'true'
      in: header
      required: false
      schema:
        type: string
    ClientTraceIdlHeader:
      name: x-client-trace-id
      description: It is used to process trace. It must be a unique value for each
        request
      example: a03debf792229fdbc6bc8a6e9b9df464
      in: header
      required: true
      schema:
        type: string
    ForwardedForHeader:
      name: x-forwareded-for
      description: It is used to inform the originated IP address of a client
      example: 203.0.113.195
      in: header
      required: true
      schema:
        type: string
