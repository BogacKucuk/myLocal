type OpCodeObject = {
  opCode1: string; // ör: "PR"
  opCode: string;  // ör: "HES-KAS-KEN"
};

function getCode(obj: OpCodeObject, currency: string): string {
  // İlk iki harf opCode1, kalanı opCode2
  const opCode2 = obj.opCode;

  // Burada tabloyu mapping olarak tutabilirsin
  const codeMap: Record<string, { TL: string; YP: string }> = {
    "PR-HES-KAS-KEN": { TL: "BO06", YP: "BK05" },
    "PR-HES-KAS-FIS": { TL: "BO06", YP: "BK05" },
    "PC-HES-KAS-FIS": { TL: "BO09", YP: "BK04" },
    "PC-KAS-KEN":     { TL: "BO01", YP: "BK04" },
  };

  const key = `${obj.opCode1}-${opCode2}`;
  const codes = codeMap[key];

  if (!codes) {
    throw new Error(`Tanımsız opCode kombinasyonu: ${key}`);
  }

  return currency === "TL" ? codes.TL : codes.YP;
}

// Kullanım:
const obj = { opCode1: "PR", opCode: "HES-KAS-KEN" };
console.log(getCode(obj, "TL")); // "BO06"
console.log(getCode(obj, "YP")); // "BK05"
