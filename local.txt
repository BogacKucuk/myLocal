@RestController
@RequestMapping("/smartControl")
public class SmartControlController {

    private ISmartControlService smartControlService;

    @Autowired
    public SmartControlController(ISmartControlService smartControlService) {
        this.smartControlService = smartControlService;
    }

    @PostMapping("/getDocuments")
    public ResponseEntity<SmartControlDataDTO> getSmartControlDocuments(@RequestBody RequestSmartControlDocuments request) throws SmartControlException {
        return new ResponseEntity<>(smartControlService.getSmartControlDocuments(request), HttpStatus.OK);
    }
}

public interface ISmartControlService {
    SmartControlDataDTO getSmartControlDocuments(RequestSmartControlDocuments request) throws SmartControlException;
}

@Getter
@Setter
public class SmartControlDataDTO {
    List<SmartControlDocumentDTO> bbtDocuments;
    List<SmartControlDocumentDTO> notExistsDocs;
}


@Getter
@Setter
public class SmartControlDocumentDTO {
    private String parameterName;
    private String description;
    private String key;
    private Boolean isExist;
}

@Getter
@Setter
public class RequestSmartControlDocuments {
    private String parameterName;
    private String groupId;
}

public class SmartControlException extends MicroException {

    private static final long serialVersionUID = -3585253702308801485L;

    public SmartControlException() {
        super(serialVersionUID);
    }

    public SmartControlException(String message) {
        super(serialVersionUID, message);
    }

    public SmartControlException(String message, Exception e) {
        super(serialVersionUID, message, e);
    }

    public SmartControlException(ExceptionData data, Exception exception) {
        super(data, exception);
    }

    public SmartControlException(ExceptionData data, Map<String, String> parameters) {
        super(data, parameters);
    }

    public SmartControlException(ExceptionData data) {
        super(data);
    }

    public SmartControlException(Long errorCode, String errorMessage, Exception exception) {
        super(errorCode, errorMessage, exception);
    }

    public SmartControlException(Long errorCode, String errorMessage) {
        super(errorCode, errorMessage);
    }

    public SmartControlException(Long errorCode) {
        super(errorCode);
    }
}
