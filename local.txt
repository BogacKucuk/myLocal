package com.ykb.corebanking.safedepositbox.safedepositboxbe;

import com.ykb.corebanking.safedepositbox.safedepositboxbe.batch.common.CustomJobParameters;
import lombok.extern.slf4j.Slf4j;
import org.springframework.batch.core.ExitStatus;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.batch.core.launch.JobLauncher; // Spring Batch interface
import org.springframework.boot.SpringApplication;
import org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
import org.springframework.cloud.openfeign.EnableFeignClients;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Import;
import com.ykb.architecture.micro.error.MicroErrorConfig;

@Slf4j
@SpringBootApplication
@ComponentScan(basePackages = {"com.ykb.corebanking.safedepositbox.safedepositboxbe"})
@EnableCaching
@EnableFeignClients
@EnableDiscoveryClient
@EnableAutoConfiguration(exclude = {SecurityAutoConfiguration.class, ManagementWebSecurityAutoConfiguration.class})
@Import(MicroErrorConfig.class)
public class SafedepositboxBeApplication {

    public static void main(String[] args) {
        // Eski koddaki environment ayarları
        String name = System.getenv("SPRING_APPLICATION_NAME");
        if (name != null) {
            System.setProperty("spring.application.name", name);
        }

        // Spring Boot Context
        ConfigurableApplicationContext ctx =
            SpringApplication.run(SafedepositboxBeApplication.class, args);

        // =============================================
        // 1) BURAYA YENİ KONTROL EKLENİYOR
        //    (Eğer ilk argüman yok veya "spring" parametresi gibi
        //    "--" ile başlıyorsa batch logic'e girmeden normal devam et.)
        // =============================================
        if (args == null || args.length == 0 || args[0].startsWith("--")) {
            // Hiç argüman yok veya ilk argüman Spring parametresi ("--...").
            // => Normal web projesi olarak çalış, batch tetikleme.
            return;  // Erken çık; main metodunun sonuna kadar gidip program backend olarak ayakta kalır.
        }

        // BURADAN SONRASI -> Argüman var VE args[0] "--" ile BAŞLAMIYOR
        // => batch ismi olarak kabul ediliyor.

        // Batch job param var mı?
        if (args.length > 0) {
            String jobName = args[0]; // Örn: "dummyParameterInsertJob"
            int exitCode = 0;
            try {
                // Parse key=value parametreler
                CustomJobParameters<String, Object> customParams =
                    ctx.getBean(CustomJobParameters.class);
                for (int i = 1; i < args.length; i++) {
                    String[] kv = args[i].split("=");
                    if (kv.length == 2) {
                        customParams.addParameter(kv[0], kv[1]);
                    }
                }

                JobLauncher batchLauncher = ctx.getBean(JobLauncher.class); // TIP BAZLI
                Job job = ctx.getBean(jobName, Job.class);

                // Job tetikle
                JobExecution execution = batchLauncher.run(
                    job,
                    new JobParametersBuilder()
                        .addLong("startTime", System.currentTimeMillis())
                        .toJobParameters()
                );

                if (!ExitStatus.COMPLETED.equals(execution.getExitStatus())) {
                    exitCode = 1;
                }
            } catch (Exception e) {
                log.error("Batch job failed with exception", e);
                exitCode = 1;
            } finally {
                // Batch bitti, kapat
                ctx.close();
                System.exit(exitCode);
            }
        }
    }
}

