package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class CreateDocumentDB2RequestDto {
    
    private ReferenceIdServerDataDto referenceIdServerData;
    private IdCardTxnDto idCardTxn;
    private GroupListDto groupList;
    private String companyCode;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ReferenceIdServerDataDto {
    
    private String userId;
    private String referenceId;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class IdCardTxnDto {
    
    private String txnId;
    private String sourceText;
    private Integer unitNum;
    private String productCode;
    private String productId;
    private String processId;
    private String processCode;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class GroupListDto {
    
    private List<GroupListItemDto> groupListItems;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class GroupListItemDto {
    
    private IdCardTxnDetailDto idCardTxn;
    private Integer customerNum;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class IdCardTxnDetailDto {
    
    private String documentId;
    private String docPersonType;
}


-------------------------response------------------------

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class CreateDocumentDB2ResponseDto {
    
    private String instanceId;
    private ErrorComponentDto errorComponent;
    private ContextStringDto contextString;
    private String messageTxt;
    private Integer returnCode;
    private Integer reasonCode;
    private String checksum;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ErrorComponentDto {
    
    private String severityCode;
    private String rollbackIndicator;
    private String originServId;
}

package com.garanti.ark.channel.dto.document;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class ContextStringDto {
    
    private Integer contextLength;
    private String contextValue;
}



----------------------------mapper---------------------------------------

package com.garanti.ark.channel.mapper;

import com.example.document.db2.*;
import com.garanti.ark.channel.dto.document.*;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.factory.Mappers;

@Mapper(config = GrpcMapperConfig.class)
public interface DocumentDB2GrpcMapper {
    
    DocumentDB2GrpcMapper INSTANCE = Mappers.getMapper(DocumentDB2GrpcMapper.class);
    
    // ==================== Request Mappings ====================
    
    /**
     * DTO'dan gRPC Request'e dönüşüm
     */
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2Request toGrpcRequest(CreateDocumentDB2RequestDto dto);
    
    /**
     * gRPC Request'ten DTO'ya dönüşüm
     */
    @Mapping(target = "referenceIdServerData", source = "referenceIdServerData")
    @Mapping(target = "idCardTxn", source = "idCardTxn")
    @Mapping(target = "groupList", source = "groupList")
    @Mapping(target = "companyCode", source = "companyCode")
    CreateDocumentDB2RequestDto toDto(CreateDocumentDB2Request grpcRequest);
    
    // ReferenceIdServerData mappings
    ReferenceIdServerData toGrpcReferenceIdServerData(ReferenceIdServerDataDto dto);
    ReferenceIdServerDataDto toReferenceIdServerDataDto(ReferenceIdServerData grpc);
    
    // IdCardTxn mappings
    IdCardTxn toGrpcIdCardTxn(IdCardTxnDto dto);
    IdCardTxnDto toIdCardTxnDto(IdCardTxn grpc);
    
    // GroupList mappings
    GroupList toGrpcGroupList(GroupListDto dto);
    GroupListDto toGroupListDto(GroupList grpc);
    
    // GroupListItem mappings
    GroupListItem toGrpcGroupListItem(GroupListItemDto dto);
    GroupListItemDto toGroupListItemDto(GroupListItem grpc);
    
    // IdCardTxnDetail mappings
    IdCardTxnDetail toGrpcIdCardTxnDetail(IdCardTxnDetailDto dto);
    IdCardTxnDetailDto toIdCardTxnDetailDto(IdCardTxnDetail grpc);
    
    // ==================== Response Mappings ====================
    
    /**
     * gRPC Response'tan DTO'ya dönüşüm
     */
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    @Mapping(target = "contextString", source = "contextString")
    @Mapping(target = "messageTxt", source = "messageTxt")
    @Mapping(target = "returnCode", source = "returnCode")
    @Mapping(target = "reasonCode", source = "reasonCode")
    @Mapping(target = "checksum", source = "checksum")
    CreateDocumentDB2ResponseDto toResponseDto(CreateDocumentDB2Response grpcResponse);
    
    /**
     * DTO'dan gRPC Response'a dönüşüm
     */
    @Mapping(target = "instanceId", source = "instanceId")
    @Mapping(target = "errorComponent", source = "errorComponent")
    @Mapping(target = "contextString", source = "contextString")
    @Mapping(target = "messageTxt", source = "messageTxt")
    @Mapping(target = "returnCode", source = "returnCode")
    @Mapping(target = "reasonCode", source = "reasonCode")
    @Mapping(target = "checksum", source = "checksum")
    CreateDocumentDB2Response toGrpcResponse(CreateDocumentDB2ResponseDto dto);
    
    // ErrorComponent mappings
    ErrorComponent toGrpcErrorComponent(ErrorComponentDto dto);
    ErrorComponentDto toErrorComponentDto(ErrorComponent grpc);
    
    // ContextString mappings
    ContextString toGrpcContextString(ContextStringDto dto);
    ContextStringDto toContextStringDto(ContextString grpc);
}


